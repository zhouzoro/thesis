{"version":3,"sources":["core.babeled.min.js","core.babeled.js"],"names":["require","Map","MapView","MapImageLayer","FeatureLayer","PopupTemplate","Legend","Compass","CompassVM","Home","HomeVM","BasemapToggle","Popup","QueryTask","Query","SimpleFillSymbol","showCoordinates","evt","$","html","mapPoint","latitude","longitude","map","basemap","view","container","zoom","center","then","on","contentID","compass","viewModel","startup","homeBtn","basemapToggle","nextBasemap","legend","ui","add","authLyrCtrl","lyrIds","authLyrs","id","url","popupTemplate","title","content","console","log","i","tempLyr","whenLayerView","lyrView","watch","val","queryFeatures","results","sym","color","outline","width","forEach","result","index","attributes","ZIP","PO_NAME","symbol","inviewIndex","switchTo","this","remove","show","hide","toggle","zoningLyrCtrl","zoningLyr","change","managePopupContent","status","el","childElementCount","unbind","fid","find","data","get","htmlStr","dropdown","click","field","qstr","createChart","bind"],"mappings":"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","file":"core.babeled.min.js","sourcesContent":["\"use strict\";\n\nrequire([\"esri/Map\", \"esri/views/MapView\", \"esri/layers/MapImageLayer\", \"esri/layers/FeatureLayer\", \"esri/PopupTemplate\", \"esri/widgets/Legend\", \"esri/widgets/Compass\", \"esri/widgets/Compass/CompassViewModel\", \"esri/widgets/Home\", \"esri/widgets/Home/HomeViewModel\", \"esri/widgets/BasemapToggle\", \"esri/widgets/Popup\", \"esri/tasks/QueryTask\", \"esri/tasks/support/Query\", \"esri/symbols/SimpleFillSymbol\", \"dojo/domReady!\"], function (Map, MapView, MapImageLayer, FeatureLayer, PopupTemplate, Legend, Compass, CompassVM, Home, HomeVM, BasemapToggle, Popup, QueryTask, Query, SimpleFillSymbol) {\n\n    var map = new Map({\n        basemap: \"oceans\"\n    });\n    var view = new MapView({\n        container: \"map-container\",\n        map: map,\n        zoom: 9,\n        center: [121, 33]\n    });\n    var services = ['zoning', 'authorized', 'authorized_source', 'authorized_cata1', 'authorized_cata2', 'authorized_method'];\n    view.then(function () {\n\n        map.on('mouse-move', showCoordinates);\n        var contentID = \"<label class='data-fid loader' data-fid='{FID}'>Loading...</label>\";\n        /*var contentID = '<table class=\"ui celled table\"><tbody><tr><td>' + 'FID' + '</td><td>' + '{FID}' + '</td></tr><tr><td>' + '配号来源' + '</td><td>' + '{配号来源}' + '</td></tr><tr><td>' + '用海一级类' + '</td><td>' + '{用海一级类}' + '</td></tr><tr><td>' + '用海二级类' + '</td><td>' + '{用海二级类}' + '</td></tr><tr><td>' + '用海方式' + '</td><td>' + '{用海方式}' + '</td></tr></tbody></table>'\r\n         */\n        //==widgets======================//\n\n        var compass = new Compass({\n            viewModel: new CompassVM({\n                view: view\n            })\n        }, \"compass\");\n        compass.startup();\n\n        var homeBtn = new Home({\n            viewModel: new HomeVM({\n                view: view\n            })\n        }, \"home\");\n        homeBtn.startup();\n\n        var basemapToggle = new BasemapToggle({\n            view: view,\n            nextBasemap: \"hybrid\"\n        }, 'basemap');\n        basemapToggle.startup();\n\n        //var legend = new Legend({ view: view }, 'legend');\n\n        var legend = new Legend({\n            view: view\n        });\n        legend.startup();\n\n        view.ui.add(legend, \"bottom-right\");\n\n        //==widgets======================//\n\n        var authLyrCtrl = function () {\n\n            var lyrIds = ['功能区划', '确权数据', '确权数据--配号来源', '确权数据--用海一级类', '确权数据--用海二级类', '确权数据--用海方式'];\n            var authLyrs = [];\n            authLyrs[1] = new FeatureLayer({\n                id: lyrIds[1],\n                url: \"http://localhost:6080/arcgis/rest/services/用海信息/MapServer/1\",\n                popupTemplate: new PopupTemplate({\n                    title: 'ID: {FID}',\n                    content: contentID\n                })\n            });\n            console.log(authLyrs[1]);\n            map.add(authLyrs[1]);\n\n            for (var i = 2; i < 6; i++) {\n                var tempLyr = new FeatureLayer({\n                    id: lyrIds[i],\n                    url: \"http://localhost:6080/arcgis/rest/services/用海信息/MapServer/\" + i,\n                    popupTemplate: new PopupTemplate({\n                        title: 'ID: {FID}',\n                        content: contentID\n                    })\n                });\n                authLyrs[i] = tempLyr;\n            }\n\n            view.whenLayerView(authLyrs[1]).then(function (lyrView) {\n                lyrView.watch(\"updating\", function (val) {\n                    if (!val) {\n                        // wait for the layer view to finish updating\n\n                        // query all the features available for drawing.\n                        lyrView.queryFeatures().then(function (results) {\n                            console.log(results[0]);\n                            var sym = SimpleFillSymbol({\n                                color: \"red\",\n                                outline: {\n                                    color: [128, 128, 128, 0.5],\n                                    width: \"0.5px\"\n                                }\n                            });\n                            results.forEach(function (result, index) {\n                                var attributes = result.attributes;\n                                var name = attributes.ZIP + \" (\" + attributes.PO_NAME + \")\";\n                                result.symbol = sym;\n                            });\n                        });\n                    }\n                });\n            });\n            /*on(listNode, on.selector(\"li\", a11yclick), function(evt) {\r\n                var target = evt.target;\r\n                var resultId = domAttr.get(target, \"data-result-id\");\r\n                  // get the graphic corresponding to the clicked zip code\r\n                var result = resultId && graphics && graphics[parseInt(resultId,\r\n                    10)];\r\n                  if (result) {\r\n                    // open the popup at the centroid of zip code polygon\r\n                    // and set the popup's features which will populate popup content and title.\r\n                    view.popup.open({\r\n                        features: [result],\r\n                        location: result.geometry.centroid\r\n                    });\r\n                }\r\n            });*/\n\n            return {\n                inviewIndex: 1,\n                on: true,\n                switchTo: function switchTo(val) {\n                    console.log('switching');\n                    console.log(this.inviewIndex);\n                    console.log(val);\n                    if (val !== this.inviewIndex) {\n                        map.remove(authLyrs[this.inviewIndex]);\n                        console.log('switching');\n                        map.add(authLyrs[val]);\n                        this.inviewIndex = val;\n                    }\n                },\n                show: function show() {\n                    map.add(authLyrs[this.inviewIndex]);\n                    this.on = true;\n                },\n                hide: function hide() {\n                    map.remove(authLyrs[this.inviewIndex]);\n                    this.on = false;\n                },\n                toggle: function toggle() {\n                    if (this.on) {\n                        map.remove(authLyrs[this.inviewIndex]);\n                        this.on = false;\n                    } else {\n                        map.add(authLyrs[this.inviewIndex]);\n                        this.on = true;\n                    }\n                }\n            };\n        }();\n\n        var zoningLyrCtrl = function () {\n\n            var zoningLyr = new FeatureLayer({\n                id: '功能区划',\n                url: \"http://localhost:6080/arcgis/rest/services/zoning/MapServer/0\"\n            });\n\n            return {\n                on: false,\n                toggle: function toggle() {\n                    if (this.on) {\n                        map.remove(zoningLyr);\n                    } else {\n\n                        map.add(zoningLyr);\n                        if (authLyrCtrl.on) {\n                            authLyrCtrl.hide;\n                            authLyrCtrl.show;\n                        }\n                    };\n                    this.on = !this.on;\n                }\n            };\n        }();\n\n        $('input.toggle.toggle-zoning').change(function () {\n            zoningLyrCtrl.toggle();\n        });\n\n        $('input.toggle.toggle-auth').change(function () {\n            authLyrCtrl.toggle();\n        });\n        /*$('input.toggle.toggle-zoning').change(function() {\r\n            if ($(this).val() == 'on') {\r\n                authLyrCtrl.show;\r\n            } else {\r\n                authLyrCtrl.hide;\r\n              }\r\n        })*/\n        $('select[name=authLyr]').change(function () {\n            console.log($(this).val());\n            authLyrCtrl.switchTo($(this).val());\n        });\n\n        var managePopupContent = function () {\n            var status = 1;\n            return function () {\n                var el = $('.esri-popup-content')[0];\n                if (status === 1 && el.childElementCount > 0) {\n                    $('.esri-popup-content').unbind(\"DOMSubtreeModified\");\n                    var fid = $('.esri-popup-content').find('.data-fid.loader').data('fid');\n                    if (fid) {\n                        $.get('http://localhost:3000/popup_content?id=' + fid, function (htmlStr) {\n                            $('.esri-popup-content').html(htmlStr);\n\n                            $('.ui.dropdown').dropdown();\n                            $('.popup-content-custom table').find('a').click(function () {\n                                var field = $(this).data('type');\n                                var qstr = 'SELECT `' + field + '` as label, count(`' + field + '` = `' + field + '`) as value FROM gis1.authorizing group by `' + field + '`';\n                                createChart(qstr, field);\n                            });\n                            $('.esri-popup-content').bind(\"DOMSubtreeModified\", managePopupContent);\n                        });\n                    }\n\n                    status = 0;\n                };\n                if (el.childElementCount < 1) {\n                    status = 1;\n                };\n            };\n        }();\n        $('.esri-popup-content').bind(\"DOMSubtreeModified\", managePopupContent);\n        view.on('click', function (evt) {\n            showCoordinates(evt);\n        });\n\n        /*$.get('http://localhost:6080/arcgis/rest/services/用海信息/MapServer/legend?f=pjson', function(res) {\r\n            legendJson = JSON.parse(res);\r\n            for (var i = 1; i < 6; i++) {\r\n                var layerTemp = legendJson.layers[i];\r\n                var layerLegend = layerTemp.legend;\r\n                var tempSrc = new dataSrc();\r\n                tempSrc.chart.subCaption = layerTemp.layerName;\r\n                tempSrc.chart.xAxisName = layerTemp.layerName;\r\n                var queryStatesTask = new QueryTask({\r\n                    url: \"http://localhost:6080/arcgis/rest/services/用海信息/MapServer/\" + i\r\n                });\r\n                var promiseResults = [];\r\n                for (var j = layerLegend.length - 1; i >= 0; i--) {\r\n                    var legd = layerLegend[i];\r\n                    promiseResults.push(new Promise((resolve, reject) => {\r\n                        var query = new Query();\r\n                        query.where = layerTemp.layerName + \" = \" + \"'\" + legd.label + \"'\";\r\n                        queryStatesTask.execute(query).then(function(result) {\r\n                            console.log(result.features.length);\r\n                            var tempData = {\r\n                                \"label\": legd.label,\r\n                                \"value\": result.features.length\r\n                            };\r\n                            resolve(tempData);\r\n                        });\r\n                    }))\r\n                }\r\n                Promise.all(promiseResults).then(function(dataArr) {\r\n                    console.log(dataArr);\r\n                    tempSrc.data = dataArr;\r\n                    renderCol3d(tempSrc);\r\n                  })\r\n            }\r\n        })*/\n    });\n\n    function showCoordinates(evt) {\n        $('#esri_widgets_Attribution_0 > div.esri-attribution__sources').html(evt.mapPoint.latitude + evt.mapPoint.longitude);\n    }\n});","require([\r\n    \"esri/Map\",\r\n    \"esri/views/MapView\",\r\n    \"esri/layers/MapImageLayer\",\r\n    \"esri/layers/FeatureLayer\",\r\n    \"esri/PopupTemplate\",\r\n    \"esri/widgets/Legend\",\r\n    \"esri/widgets/Compass\",\r\n    \"esri/widgets/Compass/CompassViewModel\",\r\n    \"esri/widgets/Home\",\r\n    \"esri/widgets/Home/HomeViewModel\",\r\n    \"esri/widgets/BasemapToggle\",\r\n    \"esri/widgets/Popup\",\r\n    \"esri/tasks/QueryTask\",\r\n    \"esri/tasks/support/Query\",\r\n    \"esri/symbols/SimpleFillSymbol\",\r\n    \"dojo/domReady!\"\r\n], function(Map, MapView, MapImageLayer, FeatureLayer, PopupTemplate, Legend, Compass, CompassVM, Home, HomeVM, BasemapToggle, Popup, QueryTask, Query, SimpleFillSymbol) {\r\n\r\n    var map = new Map({\r\n        basemap: \"oceans\"\r\n    });\r\n    var view = new MapView({\r\n        container: \"map-container\",\r\n        map: map,\r\n        zoom: 9,\r\n        center: [121, 33]\r\n    });\r\n    var services = ['zoning', 'authorized', 'authorized_source', 'authorized_cata1', 'authorized_cata2', 'authorized_method'];\r\n    view.then(function() {\r\n\r\n        map.on('mouse-move', showCoordinates);\r\n        var contentID = \"<label class='data-fid loader' data-fid='{FID}'>Loading...</label>\";\r\n        /*var contentID = '<table class=\"ui celled table\"><tbody><tr><td>' + 'FID' + '</td><td>' + '{FID}' + '</td></tr><tr><td>' + '配号来源' + '</td><td>' + '{配号来源}' + '</td></tr><tr><td>' + '用海一级类' + '</td><td>' + '{用海一级类}' + '</td></tr><tr><td>' + '用海二级类' + '</td><td>' + '{用海二级类}' + '</td></tr><tr><td>' + '用海方式' + '</td><td>' + '{用海方式}' + '</td></tr></tbody></table>'\r\n         */\r\n        //==widgets======================//\r\n\r\n        var compass = new Compass({\r\n            viewModel: new CompassVM({\r\n                view: view\r\n            })\r\n        }, \"compass\");\r\n        compass.startup();\r\n\r\n        var homeBtn = new Home({\r\n            viewModel: new HomeVM({\r\n                view: view\r\n            })\r\n        }, \"home\");\r\n        homeBtn.startup();\r\n\r\n        var basemapToggle = new BasemapToggle({\r\n            view: view,\r\n            nextBasemap: \"hybrid\"\r\n        }, 'basemap');\r\n        basemapToggle.startup();\r\n\r\n        //var legend = new Legend({ view: view }, 'legend');\r\n\r\n        var legend = new Legend({\r\n            view: view\r\n        });\r\n        legend.startup();\r\n\r\n        view.ui.add(legend, \"bottom-right\");\r\n\r\n        //==widgets======================//\r\n\r\n\r\n        var authLyrCtrl = function() {\r\n\r\n            var lyrIds = ['功能区划', '确权数据', '确权数据--配号来源', '确权数据--用海一级类', '确权数据--用海二级类', '确权数据--用海方式'];\r\n            var authLyrs = [];\r\n            authLyrs[1] = new FeatureLayer({\r\n                id: lyrIds[1],\r\n                url: \"http://localhost:6080/arcgis/rest/services/用海信息/MapServer/1\",\r\n                popupTemplate: new PopupTemplate({\r\n                    title: 'ID: {FID}',\r\n                    content: contentID\r\n                })\r\n            });\r\n            console.log(authLyrs[1]);\r\n            map.add(authLyrs[1]);\r\n\r\n            for (var i = 2; i < 6; i++) {\r\n                var tempLyr = new FeatureLayer({\r\n                    id: lyrIds[i],\r\n                    url: \"http://localhost:6080/arcgis/rest/services/用海信息/MapServer/\" + i,\r\n                    popupTemplate: new PopupTemplate({\r\n                        title: 'ID: {FID}',\r\n                        content: contentID\r\n                    })\r\n                });\r\n                authLyrs[i] = tempLyr;\r\n            }\r\n\r\n            view.whenLayerView(authLyrs[1]).then(function(lyrView) {\r\n                lyrView.watch(\"updating\", function(val) {\r\n                    if (!val) { // wait for the layer view to finish updating\r\n\r\n                        // query all the features available for drawing.\r\n                        lyrView.queryFeatures().then(function(results) {\r\n                            console.log(results[0]);\r\n                            var sym = SimpleFillSymbol({\r\n                                color: \"red\",\r\n                                outline: {\r\n                                    color: [128, 128, 128, 0.5],\r\n                                    width: \"0.5px\"\r\n                                }\r\n                            });\r\n                            results.forEach(function(result, index) {\r\n                                var attributes = result.attributes;\r\n                                var name = attributes.ZIP + \" (\" +\r\n                                    attributes.PO_NAME + \")\"\r\n                                result.symbol = sym;\r\n\r\n                            });\r\n                        });\r\n                    }\r\n                });\r\n            });\r\n            /*on(listNode, on.selector(\"li\", a11yclick), function(evt) {\r\n                var target = evt.target;\r\n                var resultId = domAttr.get(target, \"data-result-id\");\r\n\r\n                // get the graphic corresponding to the clicked zip code\r\n                var result = resultId && graphics && graphics[parseInt(resultId,\r\n                    10)];\r\n\r\n                if (result) {\r\n                    // open the popup at the centroid of zip code polygon\r\n                    // and set the popup's features which will populate popup content and title.\r\n                    view.popup.open({\r\n                        features: [result],\r\n                        location: result.geometry.centroid\r\n                    });\r\n                }\r\n            });*/\r\n\r\n            return {\r\n                inviewIndex: 1,\r\n                on: true,\r\n                switchTo: function(val) {\r\n                    console.log('switching');\r\n                    console.log(this.inviewIndex);\r\n                    console.log(val);\r\n                    if (val !== this.inviewIndex) {\r\n                        map.remove(authLyrs[this.inviewIndex]);\r\n                        console.log('switching');\r\n                        map.add(authLyrs[val]);\r\n                        this.inviewIndex = val;\r\n                    }\r\n                },\r\n                show: function() {\r\n                    map.add(authLyrs[this.inviewIndex]);\r\n                    this.on = true;\r\n                },\r\n                hide: function() {\r\n                    map.remove(authLyrs[this.inviewIndex]);\r\n                    this.on = false;\r\n                },\r\n                toggle: function() {\r\n                    if (this.on) {\r\n                        map.remove(authLyrs[this.inviewIndex]);\r\n                        this.on = false;\r\n                    } else {\r\n                        map.add(authLyrs[this.inviewIndex]);\r\n                        this.on = true;\r\n                    }\r\n                }\r\n            }\r\n        }();\r\n\r\n\r\n        var zoningLyrCtrl = function() {\r\n\r\n            var zoningLyr = new FeatureLayer({\r\n                id: '功能区划',\r\n                url: \"http://localhost:6080/arcgis/rest/services/zoning/MapServer/0\",\r\n            });\r\n\r\n            return {\r\n                on: false,\r\n                toggle: function() {\r\n                    if (this.on) {\r\n                        map.remove(zoningLyr);\r\n                    } else {\r\n\r\n                        map.add(zoningLyr);\r\n                        if (authLyrCtrl.on) {\r\n                            authLyrCtrl.hide;\r\n                            authLyrCtrl.show;\r\n\r\n                        }\r\n                    };\r\n                    this.on = !this.on;\r\n                }\r\n            }\r\n        }();\r\n\r\n        $('input.toggle.toggle-zoning').change(function() {\r\n            zoningLyrCtrl.toggle();\r\n        })\r\n\r\n        $('input.toggle.toggle-auth').change(function() {\r\n                authLyrCtrl.toggle();\r\n            })\r\n            /*$('input.toggle.toggle-zoning').change(function() {\r\n                if ($(this).val() == 'on') {\r\n                    authLyrCtrl.show;\r\n                } else {\r\n                    authLyrCtrl.hide;\r\n\r\n                }\r\n            })*/\r\n        $('select[name=authLyr]').change(function() {\r\n            console.log($(this).val());\r\n            authLyrCtrl.switchTo($(this).val());\r\n        });\r\n\r\n        var managePopupContent = function() {\r\n            var status = 1;\r\n            return function() {\r\n                var el = $('.esri-popup-content')[0];\r\n                if (status === 1 && el.childElementCount > 0) {\r\n                    $('.esri-popup-content').unbind(\"DOMSubtreeModified\");\r\n                    var fid = $('.esri-popup-content').find('.data-fid.loader').data('fid');\r\n                    if (fid) {\r\n                        $.get('http://localhost:3000/popup_content?id=' + fid, function(htmlStr) {\r\n                            $('.esri-popup-content').html(htmlStr);\r\n\r\n                            $('.ui.dropdown').dropdown();\r\n                            $('.popup-content-custom table').find('a').click(function() {\r\n                                var field = $(this).data('type');\r\n                                var qstr = 'SELECT `' + field + '` as label, count(`' + field + '` = `' + field + '`) as value FROM gis1.authorizing group by `' + field + '`';\r\n                                createChart(qstr, field);\r\n                            });\r\n                            $('.esri-popup-content').bind(\"DOMSubtreeModified\", managePopupContent);\r\n                        })\r\n                    }\r\n\r\n                    status = 0;\r\n                };\r\n                if (el.childElementCount < 1) {\r\n                    status = 1;\r\n                };\r\n            }\r\n        }();\r\n        $('.esri-popup-content').bind(\"DOMSubtreeModified\", managePopupContent);\r\n        view.on('click', function(evt) {\r\n            showCoordinates(evt);\r\n        })\r\n\r\n        /*$.get('http://localhost:6080/arcgis/rest/services/用海信息/MapServer/legend?f=pjson', function(res) {\r\n            legendJson = JSON.parse(res);\r\n            for (var i = 1; i < 6; i++) {\r\n                var layerTemp = legendJson.layers[i];\r\n                var layerLegend = layerTemp.legend;\r\n                var tempSrc = new dataSrc();\r\n                tempSrc.chart.subCaption = layerTemp.layerName;\r\n                tempSrc.chart.xAxisName = layerTemp.layerName;\r\n                var queryStatesTask = new QueryTask({\r\n                    url: \"http://localhost:6080/arcgis/rest/services/用海信息/MapServer/\" + i\r\n                });\r\n                var promiseResults = [];\r\n                for (var j = layerLegend.length - 1; i >= 0; i--) {\r\n                    var legd = layerLegend[i];\r\n                    promiseResults.push(new Promise((resolve, reject) => {\r\n                        var query = new Query();\r\n                        query.where = layerTemp.layerName + \" = \" + \"'\" + legd.label + \"'\";\r\n                        queryStatesTask.execute(query).then(function(result) {\r\n                            console.log(result.features.length);\r\n                            var tempData = {\r\n                                \"label\": legd.label,\r\n                                \"value\": result.features.length\r\n                            };\r\n                            resolve(tempData);\r\n                        });\r\n                    }))\r\n                }\r\n                Promise.all(promiseResults).then(function(dataArr) {\r\n                    console.log(dataArr);\r\n                    tempSrc.data = dataArr;\r\n                    renderCol3d(tempSrc);\r\n\r\n                })\r\n            }\r\n        })*/\r\n\r\n    });\r\n\r\n\r\n    function showCoordinates(evt) {\r\n        $('#esri_widgets_Attribution_0 > div.esri-attribution__sources').html(evt.mapPoint.latitude + evt.mapPoint.longitude)\r\n    }\r\n});\r\n"],"sourceRoot":"/source/"}