{"version":3,"sources":["core.babeled.min.js","core.babeled.js"],"names":["require","Map","MapView","MapImageLayer","FeatureLayer","PopupTemplate","Legend","Compass","CompassVM","Home","HomeVM","BasemapToggle","Popup","QueryTask","Query","Search","showCoordinates","evt","console","log","$","html","map","basemap","view","container","zoom","center","then","dataSrc","this","chart","caption","subCaption","xAxisName","yAxisName","theme","data","on","tableContent","compass","viewModel","startup","homeBtn","basemapToggle","nextBasemap","legend","ui","add","authLyrCtrl","lyrIds","authLyrs","id","url","popupTemplate","title","content","i","tempLyr","searchWidget","allPlaceholder","maxResults","sources","featureLayer","searchFields","displayField","exactMatch","outFields","name","placeholder","suggestionTemplate","position","index","whenLayerView","lyrView","watch","val","queryFeatures","results","inviewIndex","switchTo","remove","show","hide","toggle","zoningLyrCtrl","zoningLyr","change","tempSrc","label","value"],"mappings":"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","file":"core.babeled.min.js","sourcesContent":["\"use strict\";\n\nrequire([\"esri/Map\", \"esri/views/MapView\", \"esri/layers/MapImageLayer\", \"esri/layers/FeatureLayer\", \"esri/PopupTemplate\", \"esri/widgets/Legend\", \"esri/widgets/Compass\", \"esri/widgets/Compass/CompassViewModel\", \"esri/widgets/Home\", \"esri/widgets/Home/HomeViewModel\", \"esri/widgets/BasemapToggle\", \"esri/widgets/Popup\", \"esri/tasks/QueryTask\", \"esri/tasks/support/Query\", \"esri/widgets/Search\", \"dojo/domReady!\"], function (Map, MapView, MapImageLayer, FeatureLayer, PopupTemplate, Legend, Compass, CompassVM, Home, HomeVM, BasemapToggle, Popup, QueryTask, Query, Search) {\n\n    var map = new Map({\n        basemap: \"oceans\"\n    });\n    var view = new MapView({\n        container: \"map-container\",\n        map: map,\n        zoom: 9,\n        center: [121, 33]\n    });\n    var services = ['zoning', 'authorized', 'authorized_source', 'authorized_cata1', 'authorized_cata2', 'authorized_method'];\n    view.then(function () {\n\n        map.on('mouse-move', showCoordinates);\n        var content = \"<b>{FID}</b> {OBJECTID}<br>\" + \"功能区类型:{功能区类型}<br>\" + \"{SHAPE_LEN}\" + \"<img src='https://www.google.com/logos/doodles/2016/mohammed-ghani-hikmats-87th-birthday-5708620060688384-hp2x.jpg' />\";\n        var tableContent = '<table class=\"ui celled table\"><tbody><tr><td>' + 'FID' + '</td><td>' + '{FID}' + '</td></tr><tr><td>' + '配号来源' + '</td><td>' + '{配号来源}' + '</td></tr><tr><td>' + '用海一级类' + '</td><td>' + '{用海一级类}' + '</td></tr><tr><td>' + '用海二级类' + '</td><td>' + '{用海二级类}' + '</td></tr><tr><td>' + '用海方式' + '</td><td>' + '{用海方式}' + '</td></tr></tbody></table>';\n\n        //==widgets======================//\n\n        var compass = new Compass({\n            viewModel: new CompassVM({\n                view: view\n            })\n        }, \"compass\");\n        compass.startup();\n\n        var homeBtn = new Home({\n            viewModel: new HomeVM({\n                view: view\n            })\n        }, \"home\");\n        homeBtn.startup();\n\n        var basemapToggle = new BasemapToggle({\n            view: view,\n            nextBasemap: \"hybrid\"\n        }, 'basemap');\n        basemapToggle.startup();\n\n        //var legend = new Legend({ view: view }, 'legend');\n\n        var legend = new Legend({\n            view: view\n        });\n        legend.startup();\n\n        view.ui.add(legend, \"bottom-right\");\n\n        //==widgets======================//\n\n        var authLyrCtrl = function () {\n\n            var lyrIds = ['功能区划', '确权数据', '确权数据--配号来源', '确权数据--用海一级类', '确权数据--用海二级类', '确权数据--用海方式'];\n            var authLyrs = [];\n            authLyrs[1] = new FeatureLayer({\n                id: lyrIds[1],\n                url: \"http://localhost:6080/arcgis/rest/services/用海信息/MapServer/1\",\n                popupTemplate: new PopupTemplate({\n                    title: 'title',\n                    content: tableContent\n                })\n            });\n            map.add(authLyrs[1]);\n\n            for (var i = 2; i < 6; i++) {\n                var tempLyr = new FeatureLayer({\n                    id: lyrIds[i],\n                    url: \"http://localhost:6080/arcgis/rest/services/用海信息/MapServer/\" + i,\n                    popupTemplate: new PopupTemplate({\n                        title: 'title',\n                        content: tableContent\n                    })\n                });\n                authLyrs[i] = tempLyr;\n            }\n\n            var searchWidget = new Search({\n                view: view,\n                allPlaceholder: '搜索',\n                maxResults: 1000,\n                sources: [{\n                    featureLayer: new FeatureLayer({\n                        url: \"http://localhost:6080/arcgis/rest/services/用海信息/MapServer/3\"\n                    }),\n                    searchFields: [\"用海一级类\"],\n                    displayField: \"用海一级类\",\n                    exactMatch: false,\n                    outFields: [\"FID\", \"用海一级类\", \"用海方式\"],\n                    name: \"用海一级类\",\n                    placeholder: \"搜索用海一级类\"\n                }, {\n                    featureLayer: new FeatureLayer({\n                        url: \"http://localhost:6080/arcgis/rest/services/用海信息/MapServer/4\"\n                    }),\n                    searchFields: [\"FID\", \"用海二级类\"],\n                    suggestionTemplate: \"{FID}, 用海二级类: {用海二级类}\",\n                    exactMatch: false,\n                    outFields: [\"FID\", \"用海一级类\", \"用海二级类\"],\n                    name: \"用海二级类\"\n                }, {\n                    featureLayer: new FeatureLayer({\n                        url: \"http://localhost:6080/arcgis/rest/services/用海信息/MapServer/5\"\n                    }),\n                    searchFields: [\"FID\", \"用海方式\"],\n                    suggestionTemplate: \"{FID}, 用海方式: {用海方式}\",\n                    exactMatch: false,\n                    outFields: [\"FID\", \"用海一级类\", \"用海方式\"],\n                    name: \"用海方式\"\n                }]\n            });\n            searchWidget.startup();\n\n            view.ui.add(searchWidget, {\n                position: \"top-left\",\n                index: 0\n            });\n            view.whenLayerView(authLyrs[1]).then(function (lyrView) {\n                lyrView.watch(\"updating\", function (val) {\n                    if (!val) {\n                        // wait for the layer view to finish updating\n\n                        // query all the features available for drawing.\n                        lyrView.queryFeatures().then(function (results) {\n                            console.log(results[0]);\n\n                            /*graphics = results;\r\n                            var fragment = document.createDocumentFragment();\r\n                            results.forEach(function(result, index) {\r\n                            var attributes = result.attributes;\r\n                            var name = attributes.ZIP + \" (\" +\r\n                            attributes.PO_NAME + \")\"\r\n                            // Create a list zip codes in NY\r\n                            domConstruct.create(\"li\", {\r\n                            className: \"panel-result\",\r\n                            tabIndex: 0,\r\n                            \"data-result-id\": index,\r\n                            textContent: name\r\n                            }, fragment);\r\n                            });\r\n                            domConstruct.place(fragment, listNode, \"only\");*/\n                        });\n                    }\n                });\n            });\n            /*on(listNode, on.selector(\"li\", a11yclick), function(evt) {\r\n                var target = evt.target;\r\n                var resultId = domAttr.get(target, \"data-result-id\");\r\n                  // get the graphic corresponding to the clicked zip code\r\n                var result = resultId && graphics && graphics[parseInt(resultId,\r\n                    10)];\r\n                  if (result) {\r\n                    // open the popup at the centroid of zip code polygon\r\n                    // and set the popup's features which will populate popup content and title.\r\n                    view.popup.open({\r\n                        features: [result],\r\n                        location: result.geometry.centroid\r\n                    });\r\n                }\r\n            });*/\n\n            return {\n                inviewIndex: 1,\n                on: true,\n                switchTo: function switchTo(val) {\n                    console.log('switching');\n                    console.log(this.inviewIndex);\n                    console.log(val);\n                    if (val !== this.inviewIndex) {\n                        map.remove(authLyrs[this.inviewIndex]);\n                        console.log('switching');\n                        map.add(authLyrs[val]);\n                        this.inviewIndex = val;\n                    }\n                },\n                show: function show() {\n                    map.add(authLyrs[this.inviewIndex]);\n                    this.on = true;\n                },\n                hide: function hide() {\n                    map.remove(authLyrs[this.inviewIndex]);\n                    this.on = false;\n                },\n                toggle: function toggle() {\n                    if (this.on) {\n                        map.remove(authLyrs[this.inviewIndex]);\n                        this.on = false;\n                    } else {\n                        map.add(authLyrs[this.inviewIndex]);\n                        this.on = true;\n                    }\n                }\n            };\n        }();\n\n        var zoningLyrCtrl = function () {\n\n            var zoningLyr = new FeatureLayer({\n                id: '功能区划',\n                url: \"http://localhost:6080/arcgis/rest/services/zoning/MapServer/0\"\n            });\n\n            return {\n                on: false,\n                toggle: function toggle() {\n                    if (this.on) {\n                        map.remove(zoningLyr);\n                    } else {\n\n                        map.add(zoningLyr);\n                        if (authLyrCtrl.on) {\n                            authLyrCtrl.hide;\n                            authLyrCtrl.show;\n                        }\n                    };\n                    this.on = !this.on;\n                }\n            };\n        }();\n\n        $('input.toggle.toggle-zoning').change(function () {\n            zoningLyrCtrl.toggle();\n        });\n\n        $('input.toggle.toggle-auth').change(function () {\n            authLyrCtrl.toggle();\n        });\n        /*$('input.toggle.toggle-zoning').change(function() {\r\n            if ($(this).val() == 'on') {\r\n                authLyrCtrl.show;\r\n            } else {\r\n                authLyrCtrl.hide;\r\n              }\r\n        })*/\n        $('select[name=authLyr]').change(function () {\n            console.log($(this).val());\n            authLyrCtrl.switchTo($(this).val());\n        });\n\n        function dataSrc() {\n            this.chart = {\n                \"caption\": \"确权数据分类\",\n                \"subCaption\": \"用海一级类\",\n                \"xAxisName\": \"用海一级类\",\n                \"yAxisName\": \"数量\",\n                \"theme\": \"fint\"\n            };\n            this.data = [];\n        }\n        var col3dShow = [];\n\n        /*$.get('http://localhost:6080/arcgis/rest/services/用海信息/MapServer/legend?f=pjson', function(res) {\r\n            legendJson = JSON.parse(res);\r\n            for (var i = 1; i < 6; i++) {\r\n                var layerTemp = legendJson.layers[i];\r\n                var layerLegend = layerTemp.legend;\r\n                var tempSrc = new dataSrc();\r\n                tempSrc.chart.subCaption = layerTemp.layerName;\r\n                tempSrc.chart.xAxisName = layerTemp.layerName;\r\n                var queryStatesTask = new QueryTask({\r\n                    url: \"http://localhost:6080/arcgis/rest/services/用海信息/MapServer/\" + i\r\n                });\r\n                var promiseResults = [];\r\n                for (var j = layerLegend.length - 1; i >= 0; i--) {\r\n                    var legd = layerLegend[i];\r\n                    promiseResults.push(new Promise((resolve, reject) => {\r\n                        var query = new Query();\r\n                        query.where = layerTemp.layerName + \" = \" + \"'\" + legd.label + \"'\";\r\n                        queryStatesTask.execute(query).then(function(result) {\r\n                            console.log(result.features.length);\r\n                            var tempData = {\r\n                                \"label\": legd.label,\r\n                                \"value\": result.features.length\r\n                            };\r\n                            resolve(tempData);\r\n                        });\r\n                    }))\r\n                }\r\n                Promise.all(promiseResults).then(function(dataArr) {\r\n                    console.log(dataArr);\r\n                    tempSrc.data = dataArr;\r\n                    renderCol3d(tempSrc);\r\n                  })\r\n            }\r\n        })*/\n\n        var tempSrc = new dataSrc();\n        tempSrc.data = [{\n            \"label\": \"Jan\",\n            \"value\": \"420000\"\n        }, {\n            \"label\": \"Feb\",\n            \"value\": \"810000\"\n        }, {\n            \"label\": \"Mar\",\n            \"value\": \"720000\"\n        }, {\n            \"label\": \"Apr\",\n            \"value\": \"550000\"\n        }, {\n            \"label\": \"May\",\n            \"value\": \"910000\"\n        }, {\n            \"label\": \"Jun\",\n            \"value\": \"510000\"\n        }, {\n            \"label\": \"Jul\",\n            \"value\": \"680000\"\n        }, {\n            \"label\": \"Aug\",\n            \"value\": \"620000\"\n        }, {\n            \"label\": \"Sep\",\n            \"value\": \"610000\"\n        }, {\n            \"label\": \"Oct\",\n            \"value\": \"490000\"\n        }, {\n            \"label\": \"Nov\",\n            \"value\": \"900000\"\n        }, {\n            \"label\": \"Dec\",\n            \"value\": \"730000\"\n        }];\n\n        //renderCol3d(tempSrc);\n    });\n\n    function showCoordinates(evt) {\n        console.log(evt);\n        $('#esri_widgets_Attribution_0 > div.esri-attribution__sources').html();\n    }\n});","require([\r\n    \"esri/Map\",\r\n    \"esri/views/MapView\",\r\n    \"esri/layers/MapImageLayer\",\r\n    \"esri/layers/FeatureLayer\",\r\n    \"esri/PopupTemplate\",\r\n    \"esri/widgets/Legend\",\r\n    \"esri/widgets/Compass\",\r\n    \"esri/widgets/Compass/CompassViewModel\",\r\n    \"esri/widgets/Home\",\r\n    \"esri/widgets/Home/HomeViewModel\",\r\n    \"esri/widgets/BasemapToggle\",\r\n    \"esri/widgets/Popup\",\r\n    \"esri/tasks/QueryTask\",\r\n    \"esri/tasks/support/Query\",\r\n    \"esri/widgets/Search\",\r\n    \"dojo/domReady!\"\r\n], function(Map, MapView, MapImageLayer, FeatureLayer, PopupTemplate, Legend, Compass, CompassVM, Home, HomeVM, BasemapToggle, Popup, QueryTask, Query, Search) {\r\n\r\n    var map = new Map({\r\n        basemap: \"oceans\"\r\n    });\r\n    var view = new MapView({\r\n        container: \"map-container\",\r\n        map: map,\r\n        zoom: 9,\r\n        center: [121, 33]\r\n    });\r\n    var services = ['zoning', 'authorized', 'authorized_source', 'authorized_cata1', 'authorized_cata2', 'authorized_method'];\r\n    view.then(function() {\r\n\r\n    map.on('mouse-move', showCoordinates);\r\n        var content = \"<b>{FID}</b> {OBJECTID}<br>\" +\r\n            \"功能区类型:{功能区类型}<br>\" + \"{SHAPE_LEN}\" + \"<img src='https://www.google.com/logos/doodles/2016/mohammed-ghani-hikmats-87th-birthday-5708620060688384-hp2x.jpg' />\";\r\n        var tableContent = '<table class=\"ui celled table\"><tbody><tr><td>' + 'FID' + '</td><td>' + '{FID}' + '</td></tr><tr><td>' + '配号来源' + '</td><td>' + '{配号来源}' + '</td></tr><tr><td>' + '用海一级类' + '</td><td>' + '{用海一级类}' + '</td></tr><tr><td>' + '用海二级类' + '</td><td>' + '{用海二级类}' + '</td></tr><tr><td>' + '用海方式' + '</td><td>' + '{用海方式}' + '</td></tr></tbody></table>'\r\n\r\n        //==widgets======================//\r\n\r\n        var compass = new Compass({\r\n            viewModel: new CompassVM({\r\n                view: view\r\n            })\r\n        }, \"compass\");\r\n        compass.startup();\r\n\r\n        var homeBtn = new Home({\r\n            viewModel: new HomeVM({\r\n                view: view\r\n            })\r\n        }, \"home\");\r\n        homeBtn.startup();\r\n\r\n        var basemapToggle = new BasemapToggle({\r\n            view: view,\r\n            nextBasemap: \"hybrid\"\r\n        }, 'basemap');\r\n        basemapToggle.startup();\r\n\r\n        //var legend = new Legend({ view: view }, 'legend');\r\n\r\n        var legend = new Legend({\r\n            view: view\r\n        });\r\n        legend.startup();\r\n\r\n        view.ui.add(legend, \"bottom-right\");\r\n\r\n        //==widgets======================//\r\n\r\n\r\n        var authLyrCtrl = function() {\r\n\r\n            var lyrIds = ['功能区划', '确权数据', '确权数据--配号来源', '确权数据--用海一级类', '确权数据--用海二级类', '确权数据--用海方式'];\r\n            var authLyrs = [];\r\n            authLyrs[1] = new FeatureLayer({\r\n                id: lyrIds[1],\r\n                url: \"http://localhost:6080/arcgis/rest/services/用海信息/MapServer/1\",\r\n                popupTemplate: new PopupTemplate({\r\n                    title: 'title',\r\n                    content: tableContent\r\n                })\r\n            });\r\n            map.add(authLyrs[1]);\r\n\r\n            for (var i = 2; i < 6; i++) {\r\n                var tempLyr = new FeatureLayer({\r\n                    id: lyrIds[i],\r\n                    url: \"http://localhost:6080/arcgis/rest/services/用海信息/MapServer/\" + i,\r\n                    popupTemplate: new PopupTemplate({\r\n                        title: 'title',\r\n                        content: tableContent\r\n                    })\r\n                });\r\n                authLyrs[i] = tempLyr;\r\n            }\r\n\r\n            var searchWidget = new Search({\r\n                view: view,\r\n                allPlaceholder: '搜索',\r\n                maxResults: 1000,\r\n                sources: [{\r\n                    featureLayer: new FeatureLayer({\r\n                        url: \"http://localhost:6080/arcgis/rest/services/用海信息/MapServer/3\",\r\n                    }),\r\n                    searchFields: [\"用海一级类\"],\r\n                    displayField: \"用海一级类\",\r\n                    exactMatch: false,\r\n                    outFields: [\"FID\", \"用海一级类\", \"用海方式\"],\r\n                    name: \"用海一级类\",\r\n                    placeholder: \"搜索用海一级类\",\r\n                }, {\r\n                    featureLayer: new FeatureLayer({\r\n                        url: \"http://localhost:6080/arcgis/rest/services/用海信息/MapServer/4\",\r\n                    }),\r\n                    searchFields: [\"FID\", \"用海二级类\"],\r\n                    suggestionTemplate: \"{FID}, 用海二级类: {用海二级类}\",\r\n                    exactMatch: false,\r\n                    outFields: [\"FID\", \"用海一级类\", \"用海二级类\"],\r\n                    name: \"用海二级类\",\r\n                }, {\r\n                    featureLayer: new FeatureLayer({\r\n                        url: \"http://localhost:6080/arcgis/rest/services/用海信息/MapServer/5\",\r\n                    }),\r\n                    searchFields: [\"FID\", \"用海方式\"],\r\n                    suggestionTemplate: \"{FID}, 用海方式: {用海方式}\",\r\n                    exactMatch: false,\r\n                    outFields: [\"FID\", \"用海一级类\", \"用海方式\"],\r\n                    name: \"用海方式\",\r\n                }]\r\n            });\r\n            searchWidget.startup();\r\n\r\n            view.ui.add(searchWidget, {\r\n                position: \"top-left\",\r\n                index: 0\r\n            });\r\n            view.whenLayerView(authLyrs[1]).then(function(lyrView) {\r\n                lyrView.watch(\"updating\", function(val) {\r\n                    if (!val) { // wait for the layer view to finish updating\r\n\r\n                        // query all the features available for drawing.\r\n                        lyrView.queryFeatures().then(function(results) {\r\n                            console.log(results[0]);\r\n\r\n                            /*graphics = results;\r\n                        var fragment = document.createDocumentFragment();\r\n\r\n                        results.forEach(function(result, index) {\r\n                          var attributes = result.attributes;\r\n                          var name = attributes.ZIP + \" (\" +\r\n                            attributes.PO_NAME + \")\"\r\n\r\n                          // Create a list zip codes in NY\r\n                          domConstruct.create(\"li\", {\r\n                            className: \"panel-result\",\r\n                            tabIndex: 0,\r\n                            \"data-result-id\": index,\r\n                            textContent: name\r\n                          }, fragment);\r\n                        });\r\n                        domConstruct.place(fragment, listNode, \"only\");*/\r\n                        });\r\n                    }\r\n                });\r\n            });\r\n            /*on(listNode, on.selector(\"li\", a11yclick), function(evt) {\r\n                var target = evt.target;\r\n                var resultId = domAttr.get(target, \"data-result-id\");\r\n\r\n                // get the graphic corresponding to the clicked zip code\r\n                var result = resultId && graphics && graphics[parseInt(resultId,\r\n                    10)];\r\n\r\n                if (result) {\r\n                    // open the popup at the centroid of zip code polygon\r\n                    // and set the popup's features which will populate popup content and title.\r\n                    view.popup.open({\r\n                        features: [result],\r\n                        location: result.geometry.centroid\r\n                    });\r\n                }\r\n            });*/\r\n\r\n            return {\r\n                inviewIndex: 1,\r\n                on: true,\r\n                switchTo: function(val) {\r\n                    console.log('switching');\r\n                    console.log(this.inviewIndex);\r\n                    console.log(val);\r\n                    if (val !== this.inviewIndex) {\r\n                        map.remove(authLyrs[this.inviewIndex]);\r\n                        console.log('switching');\r\n                        map.add(authLyrs[val]);\r\n                        this.inviewIndex = val;\r\n                    }\r\n                },\r\n                show: function() {\r\n                    map.add(authLyrs[this.inviewIndex]);\r\n                    this.on = true;\r\n                },\r\n                hide: function() {\r\n                    map.remove(authLyrs[this.inviewIndex]);\r\n                    this.on = false;\r\n                },\r\n                toggle: function() {\r\n                    if (this.on) {\r\n                        map.remove(authLyrs[this.inviewIndex]);\r\n                        this.on = false;\r\n                    } else {\r\n                        map.add(authLyrs[this.inviewIndex]);\r\n                        this.on = true;\r\n                    }\r\n                }\r\n            }\r\n        }();\r\n\r\n\r\n        var zoningLyrCtrl = function() {\r\n\r\n            var zoningLyr = new FeatureLayer({\r\n                id: '功能区划',\r\n                url: \"http://localhost:6080/arcgis/rest/services/zoning/MapServer/0\",\r\n            });\r\n\r\n            return {\r\n                on: false,\r\n                toggle: function() {\r\n                    if (this.on) {\r\n                        map.remove(zoningLyr);\r\n                    } else {\r\n\r\n                        map.add(zoningLyr);\r\n                        if (authLyrCtrl.on) {\r\n                            authLyrCtrl.hide;\r\n                            authLyrCtrl.show;\r\n\r\n                        }\r\n                    };\r\n                    this.on = !this.on;\r\n                }\r\n            }\r\n        }();\r\n\r\n        $('input.toggle.toggle-zoning').change(function() {\r\n            zoningLyrCtrl.toggle();\r\n        })\r\n\r\n        $('input.toggle.toggle-auth').change(function() {\r\n                authLyrCtrl.toggle();\r\n            })\r\n            /*$('input.toggle.toggle-zoning').change(function() {\r\n                if ($(this).val() == 'on') {\r\n                    authLyrCtrl.show;\r\n                } else {\r\n                    authLyrCtrl.hide;\r\n\r\n                }\r\n            })*/\r\n        $('select[name=authLyr]').change(function() {\r\n            console.log($(this).val());\r\n            authLyrCtrl.switchTo($(this).val());\r\n        });\r\n\r\n        function dataSrc() {\r\n            this.chart = {\r\n                \"caption\": \"确权数据分类\",\r\n                \"subCaption\": \"用海一级类\",\r\n                \"xAxisName\": \"用海一级类\",\r\n                \"yAxisName\": \"数量\",\r\n                \"theme\": \"fint\"\r\n            };\r\n            this.data = [];\r\n        }\r\n        var col3dShow = [];\r\n\r\n        /*$.get('http://localhost:6080/arcgis/rest/services/用海信息/MapServer/legend?f=pjson', function(res) {\r\n            legendJson = JSON.parse(res);\r\n            for (var i = 1; i < 6; i++) {\r\n                var layerTemp = legendJson.layers[i];\r\n                var layerLegend = layerTemp.legend;\r\n                var tempSrc = new dataSrc();\r\n                tempSrc.chart.subCaption = layerTemp.layerName;\r\n                tempSrc.chart.xAxisName = layerTemp.layerName;\r\n                var queryStatesTask = new QueryTask({\r\n                    url: \"http://localhost:6080/arcgis/rest/services/用海信息/MapServer/\" + i\r\n                });\r\n                var promiseResults = [];\r\n                for (var j = layerLegend.length - 1; i >= 0; i--) {\r\n                    var legd = layerLegend[i];\r\n                    promiseResults.push(new Promise((resolve, reject) => {\r\n                        var query = new Query();\r\n                        query.where = layerTemp.layerName + \" = \" + \"'\" + legd.label + \"'\";\r\n                        queryStatesTask.execute(query).then(function(result) {\r\n                            console.log(result.features.length);\r\n                            var tempData = {\r\n                                \"label\": legd.label,\r\n                                \"value\": result.features.length\r\n                            };\r\n                            resolve(tempData);\r\n                        });\r\n                    }))\r\n                }\r\n                Promise.all(promiseResults).then(function(dataArr) {\r\n                    console.log(dataArr);\r\n                    tempSrc.data = dataArr;\r\n                    renderCol3d(tempSrc);\r\n\r\n                })\r\n            }\r\n        })*/\r\n\r\n        var tempSrc = new dataSrc();\r\n        tempSrc.data = [{\r\n            \"label\": \"Jan\",\r\n            \"value\": \"420000\"\r\n        }, {\r\n            \"label\": \"Feb\",\r\n            \"value\": \"810000\"\r\n        }, {\r\n            \"label\": \"Mar\",\r\n            \"value\": \"720000\"\r\n        }, {\r\n            \"label\": \"Apr\",\r\n            \"value\": \"550000\"\r\n        }, {\r\n            \"label\": \"May\",\r\n            \"value\": \"910000\"\r\n        }, {\r\n            \"label\": \"Jun\",\r\n            \"value\": \"510000\"\r\n        }, {\r\n            \"label\": \"Jul\",\r\n            \"value\": \"680000\"\r\n        }, {\r\n            \"label\": \"Aug\",\r\n            \"value\": \"620000\"\r\n        }, {\r\n            \"label\": \"Sep\",\r\n            \"value\": \"610000\"\r\n        }, {\r\n            \"label\": \"Oct\",\r\n            \"value\": \"490000\"\r\n        }, {\r\n            \"label\": \"Nov\",\r\n            \"value\": \"900000\"\r\n        }, {\r\n            \"label\": \"Dec\",\r\n            \"value\": \"730000\"\r\n        }];\r\n\r\n        //renderCol3d(tempSrc);\r\n    });\r\n\r\n\r\n    function showCoordinates(evt) {\r\n        console.log(evt);\r\n        $('#esri_widgets_Attribution_0 > div.esri-attribution__sources').html()\r\n    }\r\n});\r\n"],"sourceRoot":"/source/"}