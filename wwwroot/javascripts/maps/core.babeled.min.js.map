{"version":3,"sources":["core.babeled.min.js","core.babeled.js"],"names":["require","Map","MapView","MapImageLayer","FeatureLayer","PopupTemplate","Legend","Compass","CompassVM","Home","HomeVM","BasemapToggle","Popup","QueryTask","Query","SimpleFillSymbol","SimpleMarkerSymbol","GraphicsLayer","Graphic","Circle","Point","SimpleRenderer","ClassBreaksRenderer","map","basemap","view","container","zoom","center","then","showVS","results","features","fields","color","outline","width","name","alias","type","concat","authLyrs","colorVisVar","field","stops","value","colorVisVar2","sizeVisVar","valueUnit","size","sizeVisVar2","renderer","symbol","visualVariables","renderer2","forEach","feature","index","attributes","gm","ZIP","PO_NAME","geometry","radius","longitude","centroid","latitude","FID","radiusUnit","getPoint","ObjectID","radius2","vslyr","source","objectIdField","geometryType","id","add","reorder","vslyr2","contentTable","compass","viewModel","startup","homeBtn","basemapToggle","nextBasemap","legend","ui","zoningLyr","url","zoningLyrCtrl","on","toggle","this","remove","lyrIds","outFields","popupTemplate","title","content","i","tempLyr","authLyrCtrl","inviewIndex","switchTo","val","show","hide","queryFeatures","$","change","managePopupContent","status","el","childElementCount","unbind","fid","find","data","get","htmlStr","html","dropdown","click","qstr","createChart","bind"],"mappings":"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","file":"core.babeled.min.js","sourcesContent":["\"use strict\";\n\nrequire([\"esri/Map\", \"esri/views/MapView\", \"esri/layers/MapImageLayer\", \"esri/layers/FeatureLayer\", \"esri/PopupTemplate\", \"esri/widgets/Legend\", \"esri/widgets/Compass\", \"esri/widgets/Compass/CompassViewModel\", \"esri/widgets/Home\", \"esri/widgets/Home/HomeViewModel\", \"esri/widgets/BasemapToggle\", \"esri/widgets/Popup\", \"esri/tasks/QueryTask\", \"esri/tasks/support/Query\", \"esri/symbols/SimpleFillSymbol\", \"esri/symbols/SimpleMarkerSymbol\", \"esri/layers/GraphicsLayer\", \"esri/Graphic\", \"esri/geometry/Circle\", \"esri/geometry/Point\", \"esri/renderers/SimpleRenderer\", \"esri/renderers/ClassBreaksRenderer\", \"dojo/domReady!\"], function (Map, MapView, MapImageLayer, FeatureLayer, PopupTemplate, Legend, Compass, CompassVM, Home, HomeVM, BasemapToggle, Popup, QueryTask, Query, SimpleFillSymbol, SimpleMarkerSymbol, GraphicsLayer, Graphic, Circle, Point, SimpleRenderer, ClassBreaksRenderer) {\n\n    var map = new Map({\n        basemap: \"oceans\"\n    });\n    var view = new MapView({\n        container: \"map-container\",\n        map: map,\n        zoom: 9,\n        center: [121, 33]\n    });\n    var services = ['zoning', 'authorized', 'authorized_source', 'authorized_cata1', 'authorized_cata2', 'authorized_method'];\n    view.then(function () {\n\n        var contentID = \"<label class='data-fid loader' data-fid='{FID}'>Loading...</label>\";\n        var contentTable = '<table class=\"ui celled table\"><tbody><tr><td>' + '区域ID' + '</td><td>' + '{FID}' + '</td></tr><tr><td>' + 'radius' + '</td><td>' + '{radius}' + '</td></tr><tr><td>' + '配号来源' + '</td><td>' + '{配号来源}' + '</td></tr><tr><td>' + '用海一级类' + '</td><td>' + '{用海一级类}' + '</td></tr><tr><td>' + '用海二级类' + '</td><td>' + '{用海二级类}' + '</td></tr><tr><td>' + '用海方式' + '</td><td>' + '{用海方式}' + '</td></tr><tr><td class=\"projects\">' + '项目数量' + '</td><td>*</td></tr></tbody></table>';\n\n        //==widgets======================//\n\n        var compass = new Compass({\n            viewModel: new CompassVM({\n                view: view\n            })\n        }, \"compass\");\n        compass.startup();\n\n        var homeBtn = new Home({\n            viewModel: new HomeVM({\n                view: view\n            })\n        }, \"home\");\n        homeBtn.startup();\n\n        var basemapToggle = new BasemapToggle({\n            view: view,\n            nextBasemap: \"hybrid\"\n        }, 'basemap');\n        basemapToggle.startup();\n\n        //var legend = new Legend({ view: view }, 'legend');\n\n        var legend = new Legend({\n            view: view\n        });\n        legend.startup();\n\n        view.ui.add(legend, \"bottom-right\");\n\n        //==widgets======================//\n\n        var zoningLyr = new FeatureLayer({\n            id: 'base',\n            url: \"http://localhost:6080/arcgis/rest/services/区域/MapServer/0\"\n        });\n\n        map.add(zoningLyr);\n        map.reorder(zoningLyr, 0);\n\n        var zoningLyrCtrl = {\n            on: true,\n            toggle: function toggle() {\n                if (this.on) {\n                    map.remove(zoningLyr);\n                } else {\n                    map.add(zoningLyr);\n                    map.reorder(zoningLyr, 0);\n                };\n                this.on = !this.on;\n            }\n        };\n\n        var lyrIds = ['功能区划', '确权数据', '确权数据--配号来源', '确权数据--用海一级类', '确权数据--用海二级类', '确权数据--用海方式'];\n\n        var authLyrs = [];\n        authLyrs[1] = new FeatureLayer({\n            id: lyrIds[1],\n            outFields: [\"*\"],\n            url: \"http://localhost:6080/arcgis/rest/services/用海信息/MapServer/1\",\n            popupTemplate: new PopupTemplate({\n                title: 'ID: {FID}',\n                content: contentTable\n            })\n        });\n        map.add(authLyrs[1]);\n\n        for (var i = 2; i < 6; i++) {\n            var tempLyr = new FeatureLayer({\n                id: lyrIds[i],\n                outFields: [\"*\"],\n                url: \"http://localhost:6080/arcgis/rest/services/用海信息/MapServer/\" + i,\n                popupTemplate: new PopupTemplate({\n                    title: 'ID: {FID}',\n                    content: contentTable\n                })\n            });\n\n            authLyrs[i] = tempLyr;\n        }\n\n        var authLyrCtrl = {\n            inviewIndex: 1,\n            on: true,\n            switchTo: function switchTo(val) {\n                if (val !== this.inviewIndex) {\n                    map.remove(authLyrs[this.inviewIndex]);\n                    map.add(authLyrs[val]);\n                    map.reorder(authLyrs[val], 1);\n                    this.inviewIndex = val;\n                }\n            },\n            show: function show() {\n                map.add(authLyrs[this.inviewIndex]);\n                map.reorder(authLyrs[this.inviewIndex], 1);\n                this.on = true;\n            },\n            hide: function hide() {\n                map.remove(authLyrs[this.inviewIndex]);\n                this.on = false;\n            },\n            toggle: function toggle() {\n                if (this.on) {\n                    map.remove(authLyrs[this.inviewIndex]);\n                    this.on = false;\n                } else {\n                    map.add(authLyrs[this.inviewIndex]);\n                    map.reorder(authLyrs[this.inviewIndex], 1);\n                    this.on = true;\n                }\n            }\n        };\n\n        function showVS(results) {\n\n            var features = results.features;\n            var sym = new SimpleMarkerSymbol({\n                color: [26, 119, 80, 0.7],\n                outline: { // autocasts as new SimpleLineSymbol()\n                    color: [255, 255, 255],\n                    width: 1\n                }\n            });\n\n            var sym2 = new SimpleFillSymbol({\n                color: [26, 119, 80, 0.7],\n                outline: { // autocasts as new SimpleLineSymbol()\n                    color: [255, 255, 255],\n                    width: 2\n                }\n            });\n\n            var fields = [{\n                name: \"ObjectID\",\n                alias: \"ObjectID\",\n                type: \"oid\"\n            }, {\n                name: \"radius\",\n                alias: \"radius\",\n                type: \"double\"\n            }, {\n                name: \"radius2\",\n                alias: \"radius2\",\n                type: \"double\"\n            }];\n\n            fields = fields.concat(authLyrs[1].fields);\n\n            var colorVisVar = {\n                type: \"color\",\n                field: \"radius\",\n                stops: [{\n                    value: 4,\n                    color: [45, 195, 125, 0.9]\n                }, {\n                    value: 10,\n                    color: [45, 195, 125, 0.4]\n                }]\n            };\n\n            var colorVisVar2 = {\n                type: \"color\",\n                field: \"radius2\",\n                stops: [{\n                    value: 4,\n                    color: [155, 45, 95, 0.9]\n                }, {\n                    value: 10,\n                    color: [155, 45, 95, 0.4]\n                }]\n            };\n            var sizeVisVar = {\n                type: \"size\",\n                field: \"radius\",\n                valueUnit: \"unknown\",\n                stops: [{\n                    value: 4,\n                    size: 8\n                }, {\n                    value: 6,\n                    size: 24\n                }, {\n                    value: 8,\n                    size: 36\n                }, {\n                    value: 10,\n                    size: 42\n                }, {\n                    value: 12,\n                    size: 100\n                }]\n            };\n\n            var sizeVisVar2 = {\n                type: \"size\",\n                field: \"radius2\",\n                valueUnit: \"unknown\",\n                stops: [{\n                    value: 4,\n                    size: 42\n                }, {\n                    value: 6,\n                    size: 36\n                }, {\n                    value: 8,\n                    size: 24\n                }, {\n                    value: 10,\n                    size: 8\n                }]\n            };\n            var renderer = new SimpleRenderer({\n                // Define a default marker symbol with a small outline\n                symbol: new SimpleMarkerSymbol({\n                    color: [255, 105, 55, 0.7],\n                    outline: { // autocasts as new SimpleLineSymbol()\n                        color: [255, 255, 255, 0.6],\n                        width: 1\n                    }\n                }),\n                // Set the color and size visual variables on the renderer\n                visualVariables: [colorVisVar, sizeVisVar]\n            });\n\n            var renderer2 = new SimpleRenderer({\n                // Define a default marker symbol with a small outline\n                symbol: new SimpleMarkerSymbol({\n                    color: [255, 105, 55, 0.7],\n                    outline: { // autocasts as new SimpleLineSymbol()\n                        color: [255, 255, 255, 0.8],\n                        width: 1\n                    }\n                }),\n                // Set the color and size visual variables on the renderer\n                visualVariables: [colorVisVar2, sizeVisVar2]\n            });\n\n            features.forEach(function (feature, index) {\n                var attributes = feature.attributes;\n                var name = attributes.ZIP + \" (\" + attributes.PO_NAME + \")\";\n                var gm = feature.geometry;\n\n                var point = new Point({\n                    longitude: gm.longitude ? gm.longitude : gm.centroid.longitude,\n                    latitude: gm.latitude ? gm.latitude : gm.centroid.latitude\n                });\n\n                var radius = feature.attributes.FID > 1800 ? 10 : feature.attributes.FID > 1700 ? 8 : feature.attributes.FID > 1500 ? 6 : 4;\n\n                var circle = new Circle({\n                    radius: radius,\n                    radiusUnit: 'miles',\n                    center: feature.geometry.getPoint(0, 0)\n                });\n                feature.attributes.ObjectID = index;\n\n                feature.attributes.radius = radius;\n\n                feature.attributes.radius2 = 14 - radius;\n                //feature.symbol = sym2;\n                //console.log(point.longitude + \"-\" + point.latitude);\n                //feature.geometry = circle;\n            });\n\n            var vslyr = new FeatureLayer({\n                source: features,\n                fields: fields,\n                objectIdField: \"ObjectID\",\n                renderer: renderer,\n                geometryType: \"polygon\",\n                id: 'vs'\n\n            });\n\n            map.add(vslyr);\n\n            map.reorder(vslyr, 99);\n\n            var vslyr2 = new FeatureLayer({\n                source: features,\n                fields: fields,\n                objectIdField: \"ObjectID\",\n                renderer: renderer2,\n                geometryType: \"polygon\",\n                id: 'vs2'\n\n            });\n\n            //map.add(vslyr2);\n\n            map.reorder(vslyr2, 99);\n            /*on(listNode, on.selector(\"li\", a11yclick), function(evt) {\r\n                var target = evt.target;\r\n                var resultId = domAttr.get(target, \"data-result-id\");\r\n                  // get the graphic corresponding to the clicked zip code\r\n                var result = resultId && graphics && graphics[parseInt(resultId,\r\n                    10)];\r\n                  if (result) {\r\n                    // open the popup at the centroid of zip code polygon\r\n                    // and set the popup's features which will populate popup content and title.\r\n                    view.popup.open({\r\n                        features: [result],\r\n                        location: result.geometry.centroid\r\n                    });\r\n                }\r\n            });*/\n        }\n        authLyrs[1].then(function () {\n            authLyrs[1].queryFeatures().then(showVS);\n        });\n\n        $('input.toggle.toggle-zoning').change(function () {\n            zoningLyrCtrl.toggle();\n        });\n\n        $('input.toggle.toggle-auth').change(function () {\n            authLyrCtrl.toggle();\n        });\n\n        $('select[name=authLyr]').change(function () {\n            authLyrCtrl.switchTo($(this).val());\n        });\n\n        var managePopupContent = function () {\n            var status = 1;\n            return function () {\n                var el = $('.esri-popup-content')[0];\n                if (status === 1 && el.childElementCount > 0) {\n                    $('.esri-popup-content').unbind(\"DOMSubtreeModified\");\n                    var fid = $('.esri-popup-content').find('.data-fid.loader').data('fid');\n                    if (fid) {\n                        $.get('http://localhost:3000/popup_content?id=' + fid, function (htmlStr) {\n                            $('.esri-popup-content').html(htmlStr);\n\n                            $('.ui.dropdown').dropdown();\n                            $('.popup-content-custom table').find('a').click(function () {\n                                var field = $(this).data('type');\n                                var qstr = 'SELECT `' + field + '` as label, count(`' + field + '` = `' + field + '`) as value FROM gis1.authorizing group by `' + field + '`';\n                                createChart(qstr, field);\n                            });\n                            $('.esri-popup-content').bind(\"DOMSubtreeModified\", managePopupContent);\n                        });\n                    }\n\n                    status = 0;\n                };\n                if (el.childElementCount < 1) {\n                    status = 1;\n                };\n            };\n        }();\n\n        /*$('.esri-popup-content').bind(\"DOMSubtreeModified\", managePopupContent);\r\n        view.on('click', function(evt) {\r\n            showCoordinates(evt);\r\n        })\r\n          $.get('http://localhost:6080/arcgis/rest/services/用海信息/MapServer/legend?f=pjson', function(res) {\r\n            legendJson = JSON.parse(res);\r\n            for (var i = 1; i < 6; i++) {\r\n                var layerTemp = legendJson.layers[i];\r\n                var layerLegend = layerTemp.legend;\r\n                var tempSrc = new dataSrc();\r\n                tempSrc.chart.subCaption = layerTemp.layerName;\r\n                tempSrc.chart.xAxisName = layerTemp.layerName;\r\n                var queryStatesTask = new QueryTask({\r\n                    url: \"http://localhost:6080/arcgis/rest/services/用海信息/MapServer/\" + i\r\n                });\r\n                var promiseResults = [];\r\n                for (var j = layerLegend.length - 1; i >= 0; i--) {\r\n                    var legd = layerLegend[i];\r\n                    promiseResults.push(new Promise((resolve, reject) => {\r\n                        var query = new Query();\r\n                        query.where = layerTemp.layerName + \" = \" + \"'\" + legd.label + \"'\";\r\n                        queryStatesTask.execute(query).then(function(result) {\r\n                            console.log(result.features.length);\r\n                            var tempData = {\r\n                                \"label\": legd.label,\r\n                                \"value\": result.features.length\r\n                            };\r\n                            resolve(tempData);\r\n                        });\r\n                    }))\r\n                }\r\n                Promise.all(promiseResults).then(function(dataArr) {\r\n                    console.log(dataArr);\r\n                    tempSrc.data = dataArr;\r\n                    renderCol3d(tempSrc);\r\n                  })\r\n            }\r\n        })*/\n    });\n\n    function showCoordinates(evt) {\n        $('#esri_widgets_Attribution_0 > div.esri-attribution__sources').html(evt.mapPoint.latitude + evt.mapPoint.longitude);\n    }\n});","require([\r\n    \"esri/Map\",\r\n    \"esri/views/MapView\",\r\n    \"esri/layers/MapImageLayer\",\r\n    \"esri/layers/FeatureLayer\",\r\n    \"esri/PopupTemplate\",\r\n    \"esri/widgets/Legend\",\r\n    \"esri/widgets/Compass\",\r\n    \"esri/widgets/Compass/CompassViewModel\",\r\n    \"esri/widgets/Home\",\r\n    \"esri/widgets/Home/HomeViewModel\",\r\n    \"esri/widgets/BasemapToggle\",\r\n    \"esri/widgets/Popup\",\r\n    \"esri/tasks/QueryTask\",\r\n    \"esri/tasks/support/Query\",\r\n    \"esri/symbols/SimpleFillSymbol\",\r\n    \"esri/symbols/SimpleMarkerSymbol\",\r\n    \"esri/layers/GraphicsLayer\",\r\n    \"esri/Graphic\",\r\n    \"esri/geometry/Circle\",\r\n    \"esri/geometry/Point\",\r\n    \"esri/renderers/SimpleRenderer\",\r\n    \"esri/renderers/ClassBreaksRenderer\",\r\n    \"dojo/domReady!\"\r\n], function(Map, MapView, MapImageLayer, FeatureLayer, PopupTemplate, Legend, Compass, CompassVM, Home, HomeVM, BasemapToggle, Popup, QueryTask, Query, SimpleFillSymbol, SimpleMarkerSymbol, GraphicsLayer, Graphic, Circle, Point, SimpleRenderer, ClassBreaksRenderer) {\r\n\r\n    var map = new Map({\r\n        basemap: \"oceans\"\r\n    });\r\n    var view = new MapView({\r\n        container: \"map-container\",\r\n        map: map,\r\n        zoom: 9,\r\n        center: [121, 33]\r\n    });\r\n    var services = ['zoning', 'authorized', 'authorized_source', 'authorized_cata1', 'authorized_cata2', 'authorized_method'];\r\n    view.then(function() {\r\n\r\n        var contentID = \"<label class='data-fid loader' data-fid='{FID}'>Loading...</label>\";\r\n        var contentTable = '<table class=\"ui celled table\"><tbody><tr><td>' + '区域ID' + '</td><td>' + '{FID}' + '</td></tr><tr><td>' + 'radius' + '</td><td>' + '{radius}' + '</td></tr><tr><td>' + '配号来源' + '</td><td>' + '{配号来源}' + '</td></tr><tr><td>' + '用海一级类' + '</td><td>' + '{用海一级类}' + '</td></tr><tr><td>' + '用海二级类' + '</td><td>' + '{用海二级类}' + '</td></tr><tr><td>' + '用海方式' + '</td><td>' + '{用海方式}' + '</td></tr><tr><td class=\"projects\">' + '项目数量' + '</td><td>*</td></tr></tbody></table>'\r\n\r\n        //==widgets======================//\r\n\r\n        var compass = new Compass({\r\n            viewModel: new CompassVM({\r\n                view: view\r\n            })\r\n        }, \"compass\");\r\n        compass.startup();\r\n\r\n        var homeBtn = new Home({\r\n            viewModel: new HomeVM({\r\n                view: view\r\n            })\r\n        }, \"home\");\r\n        homeBtn.startup();\r\n\r\n        var basemapToggle = new BasemapToggle({\r\n            view: view,\r\n            nextBasemap: \"hybrid\"\r\n        }, 'basemap');\r\n        basemapToggle.startup();\r\n\r\n        //var legend = new Legend({ view: view }, 'legend');\r\n\r\n        var legend = new Legend({\r\n            view: view\r\n        });\r\n        legend.startup();\r\n\r\n        view.ui.add(legend, \"bottom-right\");\r\n\r\n        //==widgets======================//\r\n\r\n\r\n        var zoningLyr = new FeatureLayer({\r\n            id: 'base',\r\n            url: \"http://localhost:6080/arcgis/rest/services/区域/MapServer/0\",\r\n        });\r\n\r\n        map.add(zoningLyr);\r\n        map.reorder(zoningLyr, 0);\r\n\r\n        var zoningLyrCtrl = {\r\n            on: true,\r\n            toggle: function() {\r\n                if (this.on) {\r\n                    map.remove(zoningLyr);\r\n                } else {\r\n                    map.add(zoningLyr);\r\n                    map.reorder(zoningLyr, 0);\r\n                };\r\n                this.on = !this.on;\r\n            }\r\n        };\r\n\r\n        var lyrIds = ['功能区划', '确权数据', '确权数据--配号来源', '确权数据--用海一级类', '确权数据--用海二级类', '确权数据--用海方式'];\r\n\r\n        var authLyrs = [];\r\n        authLyrs[1] = new FeatureLayer({\r\n            id: lyrIds[1],\r\n            outFields: [\"*\"],\r\n            url: \"http://localhost:6080/arcgis/rest/services/用海信息/MapServer/1\",\r\n            popupTemplate: new PopupTemplate({\r\n                title: 'ID: {FID}',\r\n                content: contentTable\r\n            })\r\n        });\r\n        map.add(authLyrs[1]);\r\n\r\n        for (var i = 2; i < 6; i++) {\r\n            var tempLyr = new FeatureLayer({\r\n                id: lyrIds[i],\r\n                outFields: [\"*\"],\r\n                url: \"http://localhost:6080/arcgis/rest/services/用海信息/MapServer/\" + i,\r\n                popupTemplate: new PopupTemplate({\r\n                    title: 'ID: {FID}',\r\n                    content: contentTable\r\n                })\r\n            });\r\n\r\n            authLyrs[i] = tempLyr;\r\n        }\r\n\r\n        var authLyrCtrl = {\r\n            inviewIndex: 1,\r\n            on: true,\r\n            switchTo: function(val) {\r\n                if (val !== this.inviewIndex) {\r\n                    map.remove(authLyrs[this.inviewIndex]);\r\n                    map.add(authLyrs[val]);\r\n                    map.reorder(authLyrs[val], 1);\r\n                    this.inviewIndex = val;\r\n                }\r\n            },\r\n            show: function() {\r\n                map.add(authLyrs[this.inviewIndex]);\r\n                map.reorder(authLyrs[this.inviewIndex], 1);\r\n                this.on = true;\r\n            },\r\n            hide: function() {\r\n                map.remove(authLyrs[this.inviewIndex]);\r\n                this.on = false;\r\n            },\r\n            toggle: function() {\r\n                if (this.on) {\r\n                    map.remove(authLyrs[this.inviewIndex]);\r\n                    this.on = false;\r\n                } else {\r\n                    map.add(authLyrs[this.inviewIndex]);\r\n                    map.reorder(authLyrs[this.inviewIndex], 1);\r\n                    this.on = true;\r\n                }\r\n            }\r\n        };\r\n\r\n        function showVS(results) {\r\n\r\n            var features = results.features;\r\n            var sym = new SimpleMarkerSymbol({\r\n                color: [26, 119, 80, 0.7],\r\n                outline: { // autocasts as new SimpleLineSymbol()\r\n                    color: [255, 255, 255],\r\n                    width: 1\r\n                }\r\n            });\r\n\r\n\r\n            var sym2 = new SimpleFillSymbol({\r\n                color: [26, 119, 80, 0.7],\r\n                outline: { // autocasts as new SimpleLineSymbol()\r\n                    color: [255, 255, 255],\r\n                    width: 2\r\n                }\r\n            });\r\n\r\n            var fields = [{\r\n                name: \"ObjectID\",\r\n                alias: \"ObjectID\",\r\n                type: \"oid\"\r\n            }, {\r\n                name: \"radius\",\r\n                alias: \"radius\",\r\n                type: \"double\"\r\n            }, {\r\n                name: \"radius2\",\r\n                alias: \"radius2\",\r\n                type: \"double\"\r\n            }];\r\n\r\n            fields = fields.concat(authLyrs[1].fields);\r\n\r\n            var colorVisVar = {\r\n                type: \"color\",\r\n                field: \"radius\",\r\n                stops: [{\r\n                    value: 4,\r\n                    color: [45, 195, 125, 0.9]\r\n                }, {\r\n                    value: 10,\r\n                    color: [45, 195, 125, 0.4]\r\n                }]\r\n            }\r\n\r\n            var colorVisVar2 = {\r\n                type: \"color\",\r\n                field: \"radius2\",\r\n                stops: [{\r\n                    value: 4,\r\n                    color: [155, 45, 95, 0.9]\r\n                }, {\r\n                    value: 10,\r\n                    color: [155, 45, 95, 0.4]\r\n                }]\r\n            }\r\n            var sizeVisVar = {\r\n                type: \"size\",\r\n                field: \"radius\",\r\n                valueUnit: \"unknown\",\r\n                stops: [{\r\n                    value: 4,\r\n                    size: 8\r\n                }, {\r\n                    value: 6,\r\n                    size: 24\r\n                }, {\r\n                    value: 8,\r\n                    size: 36\r\n                }, {\r\n                    value: 10,\r\n                    size: 42\r\n                }, {\r\n                    value: 12,\r\n                    size: 100\r\n                }]\r\n            }\r\n\r\n            var sizeVisVar2 = {\r\n                type: \"size\",\r\n                field: \"radius2\",\r\n                valueUnit: \"unknown\",\r\n                stops: [{\r\n                    value: 4,\r\n                    size: 42\r\n                }, {\r\n                    value: 6,\r\n                    size: 36\r\n                }, {\r\n                    value: 8,\r\n                    size: 24\r\n                }, {\r\n                    value: 10,\r\n                    size: 8\r\n                }]\r\n            }\r\n            var renderer = new SimpleRenderer({\r\n                // Define a default marker symbol with a small outline\r\n                symbol: new SimpleMarkerSymbol({\r\n                    color: [255, 105, 55, 0.7],\r\n                    outline: { // autocasts as new SimpleLineSymbol()\r\n                        color: [255, 255, 255, 0.6],\r\n                        width: 1\r\n                    }\r\n                }),\r\n                // Set the color and size visual variables on the renderer\r\n                visualVariables: [colorVisVar, sizeVisVar]\r\n            });\r\n\r\n            var renderer2 = new SimpleRenderer({\r\n                // Define a default marker symbol with a small outline\r\n                symbol: new SimpleMarkerSymbol({\r\n                    color: [255, 105, 55, 0.7],\r\n                    outline: { // autocasts as new SimpleLineSymbol()\r\n                        color: [255, 255, 255, 0.8],\r\n                        width: 1\r\n                    }\r\n                }),\r\n                // Set the color and size visual variables on the renderer\r\n                visualVariables: [colorVisVar2, sizeVisVar2]\r\n            });\r\n\r\n            features.forEach(function(feature, index) {\r\n                var attributes = feature.attributes;\r\n                var name = attributes.ZIP + \" (\" +\r\n                    attributes.PO_NAME + \")\"\r\n                var gm = feature.geometry;\r\n\r\n                var point = new Point({\r\n                    longitude: gm.longitude ? gm.longitude : gm.centroid.longitude,\r\n                    latitude: gm.latitude ? gm.latitude : gm.centroid.latitude\r\n                });\r\n\r\n                var radius = feature.attributes.FID > 1800 ? 10 : feature.attributes.FID > 1700 ? 8 : feature.attributes.FID > 1500 ? 6 : 4;\r\n\r\n\r\n                var circle = new Circle({\r\n                    radius: radius,\r\n                    radiusUnit: 'miles',\r\n                    center: feature.geometry.getPoint(0, 0)\r\n                });\r\n                feature.attributes.ObjectID = index;\r\n\r\n                feature.attributes.radius = radius;\r\n\r\n                feature.attributes.radius2 = 14 - radius;\r\n                //feature.symbol = sym2;\r\n                //console.log(point.longitude + \"-\" + point.latitude);\r\n                //feature.geometry = circle;\r\n\r\n            });\r\n\r\n            var vslyr = new FeatureLayer({\r\n                source: features,\r\n                fields: fields,\r\n                objectIdField: \"ObjectID\",\r\n                renderer: renderer,\r\n                geometryType: \"polygon\",\r\n                id: 'vs',\r\n\r\n            });\r\n\r\n            map.add(vslyr);\r\n\r\n            map.reorder(vslyr, 99);\r\n\r\n            var vslyr2 = new FeatureLayer({\r\n                source: features,\r\n                fields: fields,\r\n                objectIdField: \"ObjectID\",\r\n                renderer: renderer2,\r\n                geometryType: \"polygon\",\r\n                id: 'vs2',\r\n\r\n            });\r\n\r\n            //map.add(vslyr2);\r\n\r\n            map.reorder(vslyr2, 99);\r\n            /*on(listNode, on.selector(\"li\", a11yclick), function(evt) {\r\n                var target = evt.target;\r\n                var resultId = domAttr.get(target, \"data-result-id\");\r\n\r\n                // get the graphic corresponding to the clicked zip code\r\n                var result = resultId && graphics && graphics[parseInt(resultId,\r\n                    10)];\r\n\r\n                if (result) {\r\n                    // open the popup at the centroid of zip code polygon\r\n                    // and set the popup's features which will populate popup content and title.\r\n                    view.popup.open({\r\n                        features: [result],\r\n                        location: result.geometry.centroid\r\n                    });\r\n                }\r\n            });*/\r\n\r\n        }\r\n        authLyrs[1].then(function() {\r\n            authLyrs[1].queryFeatures().then(showVS);\r\n        });\r\n\r\n        $('input.toggle.toggle-zoning').change(function() {\r\n            zoningLyrCtrl.toggle();\r\n        });\r\n\r\n        $('input.toggle.toggle-auth').change(function() {\r\n            authLyrCtrl.toggle();\r\n        });\r\n\r\n        $('select[name=authLyr]').change(function() {\r\n            authLyrCtrl.switchTo($(this).val());\r\n        });\r\n\r\n        var managePopupContent = function() {\r\n            var status = 1;\r\n            return function() {\r\n                var el = $('.esri-popup-content')[0];\r\n                if (status === 1 && el.childElementCount > 0) {\r\n                    $('.esri-popup-content').unbind(\"DOMSubtreeModified\");\r\n                    var fid = $('.esri-popup-content').find('.data-fid.loader').data('fid');\r\n                    if (fid) {\r\n                        $.get('http://localhost:3000/popup_content?id=' + fid, function(htmlStr) {\r\n                            $('.esri-popup-content').html(htmlStr);\r\n\r\n                            $('.ui.dropdown').dropdown();\r\n                            $('.popup-content-custom table').find('a').click(function() {\r\n                                var field = $(this).data('type');\r\n                                var qstr = 'SELECT `' + field + '` as label, count(`' + field + '` = `' + field + '`) as value FROM gis1.authorizing group by `' + field + '`';\r\n                                createChart(qstr, field);\r\n                            });\r\n                            $('.esri-popup-content').bind(\"DOMSubtreeModified\", managePopupContent);\r\n                        })\r\n                    }\r\n\r\n                    status = 0;\r\n                };\r\n                if (el.childElementCount < 1) {\r\n                    status = 1;\r\n                };\r\n            }\r\n        }();\r\n\r\n        /*$('.esri-popup-content').bind(\"DOMSubtreeModified\", managePopupContent);\r\n        view.on('click', function(evt) {\r\n            showCoordinates(evt);\r\n        })\r\n\r\n        $.get('http://localhost:6080/arcgis/rest/services/用海信息/MapServer/legend?f=pjson', function(res) {\r\n            legendJson = JSON.parse(res);\r\n            for (var i = 1; i < 6; i++) {\r\n                var layerTemp = legendJson.layers[i];\r\n                var layerLegend = layerTemp.legend;\r\n                var tempSrc = new dataSrc();\r\n                tempSrc.chart.subCaption = layerTemp.layerName;\r\n                tempSrc.chart.xAxisName = layerTemp.layerName;\r\n                var queryStatesTask = new QueryTask({\r\n                    url: \"http://localhost:6080/arcgis/rest/services/用海信息/MapServer/\" + i\r\n                });\r\n                var promiseResults = [];\r\n                for (var j = layerLegend.length - 1; i >= 0; i--) {\r\n                    var legd = layerLegend[i];\r\n                    promiseResults.push(new Promise((resolve, reject) => {\r\n                        var query = new Query();\r\n                        query.where = layerTemp.layerName + \" = \" + \"'\" + legd.label + \"'\";\r\n                        queryStatesTask.execute(query).then(function(result) {\r\n                            console.log(result.features.length);\r\n                            var tempData = {\r\n                                \"label\": legd.label,\r\n                                \"value\": result.features.length\r\n                            };\r\n                            resolve(tempData);\r\n                        });\r\n                    }))\r\n                }\r\n                Promise.all(promiseResults).then(function(dataArr) {\r\n                    console.log(dataArr);\r\n                    tempSrc.data = dataArr;\r\n                    renderCol3d(tempSrc);\r\n\r\n                })\r\n            }\r\n        })*/\r\n\r\n    });\r\n\r\n    function showCoordinates(evt) {\r\n        $('#esri_widgets_Attribution_0 > div.esri-attribution__sources').html(evt.mapPoint.latitude + evt.mapPoint.longitude)\r\n    }\r\n});\r\n"],"sourceRoot":"/source/"}