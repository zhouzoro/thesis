{"version":3,"sources":["core.babeled.min.js","core.babeled.js"],"names":["require","Map","MapView","ArcGISDynamicLayer","FeatureLayer","PopupTemplate","Legend","Compass","CompassVM","Home","HomeVM","map","basemap","view","container","zoom","center","content","legendJson","title","$","get","res","zoningLyr","id","url","add","tempLyr","definitionExpression","popupTemplate","compass","viewModel","startup","homeBtn","legend","switchLyr","lyrNames","authLyr","i","lyrs","newLyr","visible","to","val","lyrid","refresh","show","layerControl","setCheckbox","hide","change","this","each","legendSvcLyr","label","find","text","lyrName","substring","lastIndexOf","console","log","layer","first","tr","tds","length","sym","td","cata","lyrIndex","indexOf","specificLyrs","checkBox","attr","type","data-lyr","data-cata","data-lyrid","prop","data","is","newtd","append","insertBefore"],"mappings":"AAAA,YCAAA,UACI,WACA,qBACA,iCACA,2BACA,qBACA,sBACA,uBACA,wCACA,oBACA,kCACA,kBACD,SAASC,EAAKC,EAASC,EAAoBC,EAAcC,EAAeC,EAAQC,EAASC,EAAWC,EAAMC,GACzG,GAAIC,GAAM,GAAIV,IACVW,QAAS,WAGTC,EAAO,GAAIX,IACXY,UAAW,gBACXH,IAAKA,EACLI,KAAM,EACNC,QAAS,MAAO,MAQhBC,EAAU,gLAOVC,GAJK,GAAIb,IACTc,MAAO,QACPF,QAASA,OAGbG,GAAEC,IAAI,4EAA6E,SAASC,GACxFJ,EAAgBI,GAEpB,IAAIC,GAAY,GAAInB,IAChBoB,GAAI,OACJC,IAAK,gEAGTd,GAAIe,IAAIH,EACR,IAAII,GAAU,GAAIvB,IACdqB,IAAK,+DACLG,qBAAsB,iBAClBC,cAAe,GAAIxB,IACfc,MAAO,QACPF,QAAS,2BAGrBN,GAAIe,IAAIC,EA1CyG,IA4C7GG,GAAU,GAAIvB,IACdwB,UAAW,GAAIvB,IACXK,KAAMA,KAEX,UACHiB,GAAQE,SAER,IAAIC,GAAU,GAAIxB,IACdsB,UAAW,GAAIrB,IACXG,KAAMA,KAEX,OACHoB,GAAQD,SAER,IAAIE,GAAS,GAAI5B,IAASO,KAAMA,GAAQ,SACxCqB,GAAOF,SACP,IAAIG,GAAY,WACZ,GAAIC,IAAY,OAAQ,aAAc,cAAe,cAAe,aAAc,QAC9EC,EAAU,GAAIjC,IACdoB,GAAIY,EAAS,GACbX,IAAK,+DACLI,cAAe,GAAIxB,IACfc,MAAO,QACPF,QAAS,YAAcqB,EAAI,kBAGnC3B,GAAIe,IAAIW,EAER,IAAIE,KACJA,GAAKF,EAAQb,IAAMa,CACnB,KAAK,GAAIC,GAAI,EAAO,EAAJA,EAAOA,IAAK,CACxB,GAAIE,GAAS,GAAIpC,IACboB,GAAIY,EAASE,GACbb,IAAK,8DAAgEa,EACrET,cAAe,GAAIxB,IACfc,MAAO,QACPF,QAAS,YAAcqB,EAAI,6BANXE,GAUjBC,SAAU,EACjB9B,EAAIe,IAAIc,GACRD,EAAKC,EAAOhB,IAAMgB,EAEtB,OACIE,GAAI,SAAYC,GACZ,IAAK,GAAIC,KAASL,GACdA,EAAKK,GAAOH,SAAU,EAClBG,GAASR,EAASO,KAClBJ,EAAKK,GAAOH,SAAU,EAG9BP,GAAOW,WAGXC,KAAM,SAActB,GAChBe,EAAKf,GAAIiB,SAAU,EACnBP,EAAOW,UACPE,EAAaC,eAEjBC,KAAM,SAAczB,GAChBe,EAAKf,GAAIiB,SAAU,EACnBP,EAAOW,UACPE,EAAaC,kBAKzB5B,GAAE,gBAAgB8B,OAAO,WACrBf,EAAUO,GAAGtB,EAAE+B,MAAMR,QAKzB,IAAII,GAAe,WAIf,QAASC,KACL5B,EAAE,wBAAwBgC,KAAK,WAC3B,GAAIC,GAAejC,EAAE+B,MACjBG,EAAQD,EAAaE,KAAK,8BAA8BC,OACxDC,EAAUH,EAAMI,UAAUJ,EAAMK,YAAY,KAAO,EACvDC,SAAQC,IAAIJ,EACZ,IAAIK,GAAQT,EAAaE,KAAK,sBAAsBQ,OALdD,GAOhCP,KAAK,MAAMH,KAAK,WAClB,GAAIY,GAAK5C,EAAE+B,MACPc,EAAMD,EAAGT,KAAK,KAClB,IAAIU,GAAOA,EAAIC,QAAUD,EAAIC,OAAS,EAAG,CACrC,GAAIC,GAAM/C,EAAE+B,MAAMI,KAAK,MAAMQ,OADQ3C,GAGnC+B,MAAMI,KAAK,MAAMH,KAAK,WACpB,GAAIgB,GAAKhD,EAAE+B,KACX,KAAMiB,EAAGb,KAAK,SAAS,GAAK,CACxB,GAAIc,GAAOjD,EAAE+B,MAAMK,MACnB,IAAIa,GAAQA,EAAKH,OAAS,EAAG,CAEzB,GAAII,GAAWlC,EAASmC,QAAQd,GAC5B9B,EAAU,GAAIvB,IACdoB,GAAIiC,EAAU,IAAMY,EACpB5C,IAAK,8DAAgE6C,EACrE1C,qBAAsB6B,EAAU,OAAcY,EAAO,KAEzD1D,GAAIe,IAAIC,GACR6C,EAAa7C,EAAQH,IAAMG,CATF,IAWrB8C,GAAWrD,EAAE,WAAWsD,MAAOC,KAAQ,WAAYC,WAAYnB,EAASoB,YAAaR,EAAMS,aAAcrB,EAAU,IAAMY,IAAQU,KAAK,WAAW,GAAMvB,KAAKa,GAAMnB,OAAO,WACzK,GAAIN,GAAQxB,EAAE+B,MAAM6B,KAAK,QACzB,OAAI5D,GAAE+B,MAAM8B,GAAG,iBACXT,EAAa5B,GAAOH,SAAU,QAGlC+B,EAAa5B,GAAOH,SAAU,KAE9ByC,EAAQ9D,EAAE,QAAQ+D,OAAOV,EAnBJS,GAqBnBE,aAAajB,YA1C/C,GAAIK,MACApC,GAAY,OAAQ,aAAc,cAAe,cAAe,aAAc,OAkDlF,QACIY,YAAaA","file":"core.babeled.min.js","sourcesContent":["\"use strict\";\n\nrequire([\"esri/Map\", \"esri/views/MapView\", \"esri/layers/ArcGISDynamicLayer\", \"esri/layers/FeatureLayer\", \"esri/PopupTemplate\", \"esri/widgets/Legend\", \"esri/widgets/Compass\", \"esri/widgets/Compass/CompassViewModel\", \"esri/widgets/Home\", \"esri/widgets/Home/HomeViewModel\", \"dojo/domReady!\"], function (Map, MapView, ArcGISDynamicLayer, FeatureLayer, PopupTemplate, Legend, Compass, CompassVM, Home, HomeVM) {\n    var map = new Map({\n        basemap: \"oceans\"\n    });\n\n    var view = new MapView({\n        container: \"map-container\",\n        map: map,\n        zoom: 9,\n        center: [121.5, 33]\n    });\n\n    /*var lyr = new ArcGISDynamicLayer({\r\n        url: \"http://localhost:6080/arcgis/rest/services/04202/MapServer\"\r\n    });\r\n    map.add(lyr);*/\n\n    var content = \"<b>{FID}</b> {OBJECTID}<br>\" + \"功能区类型:{功能区类型}<br>\" + \"{SHAPE_LEN}\" + \"<img src='https://www.google.com/logos/doodles/2016/mohammed-ghani-hikmats-87th-birthday-5708620060688384-hp2x.jpg' />\";\n\n    var pt = new PopupTemplate({\n        title: '{FID}',\n        content: content\n    });\n    var legendJson = {};\n    $.get('http://localhost:6080/arcgis/rest/services/04202/MapServer/legend?f=pjson', function (res) {\n        legendJson = res;\n    });\n    var zoningLyr = new FeatureLayer({\n        id: '功能区划',\n        url: \"http://localhost:6080/arcgis/rest/services/04202/MapServer/5\"\n    });\n    //popupTemplate: pt\n    map.add(zoningLyr);\n    var tempLyr = new FeatureLayer({\n        url: \"http://localhost:6080/arcgis/rest/services/04202/MapServer/2\",\n        definitionExpression: \"用海一级类 = '渔业用海'\",\n        popupTemplate: new PopupTemplate({\n            title: 'title',\n            content: \"layer.No.\" + \"<b>{FID}</b>\"\n        })\n    });\n    map.add(tempLyr);\n    /**/\n    var compass = new Compass({\n        viewModel: new CompassVM({\n            view: view\n        })\n    }, \"compass\");\n    compass.startup();\n\n    var homeBtn = new Home({\n        viewModel: new HomeVM({\n            view: view\n        })\n    }, \"home\");\n    homeBtn.startup();\n\n    var legend = new Legend({ view: view }, 'legend');\n    legend.startup();\n    var switchLyr = function () {\n        var lyrNames = ['确权数据', '确权数据--配号来源', '确权数据--用海一级类', '确权数据--用海二级类', '确权数据--用海方式', '功能区划'];\n        var authLyr = new FeatureLayer({\n            id: lyrNames[0],\n            url: \"http://localhost:6080/arcgis/rest/services/04202/MapServer/0\",\n            popupTemplate: new PopupTemplate({\n                title: 'title',\n                content: \"layer.No.\" + i + \"<b>{FID}</b>\"\n            })\n        });\n        map.add(authLyr);\n\n        var lyrs = {};\n        lyrs[authLyr.id] = authLyr;\n        for (var i = 1; i < 5; i++) {\n            var newLyr = new FeatureLayer({\n                id: lyrNames[i],\n                url: \"http://localhost:6080/arcgis/rest/services/04202/MapServer/\" + i,\n                popupTemplate: new PopupTemplate({\n                    title: 'title',\n                    content: \"layer.No.\" + i + \"<br><b>{FID}</b>{用海一级类}\"\n                })\n            });\n            //add but do not show\n            newLyr.visible = false;\n            map.add(newLyr);\n            lyrs[newLyr.id] = newLyr;\n        }\n        return {\n            to: function to(val) {\n                for (var lyrid in lyrs) {\n                    lyrs[lyrid].visible = false;\n                    if (lyrid == lyrNames[val]) {\n                        lyrs[lyrid].visible = true;\n                    }\n                }\n                legend.refresh();\n                //layerControl.setCheckbox();\n            },\n            show: function hide(id) {\n                lyrs[id].visible = true;\n                legend.refresh();\n                layerControl.setCheckbox();\n            },\n            hide: function hide(id) {\n                lyrs[id].visible = false;\n                legend.refresh();\n                layerControl.setCheckbox();\n            }\n        };\n    }();\n\n    $('#aythLyrCata').change(function () {\n        switchLyr.to($(this).val());\n    });\n\n    var layerControl = function () {\n        var specificLyrs = {};\n        var lyrNames = ['确权数据', '确权数据--配号来源', '确权数据--用海一级类', '确权数据--用海二级类', '确权数据--用海方式', '功能区划'];\n\n        function setCheckbox() {\n            $('.esri-legend-service').each(function () {\n                var legendSvcLyr = $(this);\n                var label = legendSvcLyr.find('.esri-legend-service-label').text();\n                var lyrName = label.substring(label.lastIndexOf(' ') + 1);\n                console.log(lyrName);\n                var layer = legendSvcLyr.find('.esri-legend-layer').first();\n                //loop through table rows\n                layer.find('tr').each(function () {\n                    var tr = $(this);\n                    var tds = tr.find('td');\n                    if (tds && tds.length && tds.length > 1) {\n                        var sym = $(this).find('td').first();\n                        //find the cell has text, which should be catagory info\n                        $(this).find('td').each(function () {\n                            var td = $(this);\n                            if (!td.find('table')[0]) {\n                                var cata = $(this).text();\n                                if (cata && cata.length > 0) {\n                                    //add the layer\n                                    var lyrIndex = lyrNames.indexOf(lyrName);\n                                    var tempLyr = new FeatureLayer({\n                                        id: lyrName + '_' + cata,\n                                        url: \"http://localhost:6080/arcgis/rest/services/04202/MapServer/\" + lyrIndex,\n                                        definitionExpression: lyrName + \" = \" + \"'\" + cata + \"'\"\n                                    });\n                                    map.add(tempLyr);\n                                    specificLyrs[tempLyr.id] = tempLyr;\n                                    //add checkbox\n                                    var checkBox = $('<input>').attr({ 'type': 'checkbox', 'data-lyr': lyrName, 'data-cata': cata, 'data-lyrid': lyrName + '_' + cata }).prop('checked', true).text(cata).change(function () {\n                                        var lyrid = $(this).data('lyrid');\n                                        if ($(this).is(':checked')) {\n                                            specificLyrs[lyrid].visible = true;\n                                            return;\n                                        }\n                                        specificLyrs[lyrid].visible = false;\n                                    });\n                                    var newtd = $('<td>').append(checkBox);\n                                    //insert checkbox\n                                    newtd.insertBefore(sym);\n                                }\n                            }\n                        });\n                    }\n                });\n            });\n        }\n        return {\n            setCheckbox: setCheckbox\n        };\n    }();\n});","require([\r\n    \"esri/Map\",\r\n    \"esri/views/MapView\",\r\n    \"esri/layers/ArcGISDynamicLayer\",\r\n    \"esri/layers/FeatureLayer\",\r\n    \"esri/PopupTemplate\",\r\n    \"esri/widgets/Legend\",\r\n    \"esri/widgets/Compass\",\r\n    \"esri/widgets/Compass/CompassViewModel\",\r\n    \"esri/widgets/Home\",\r\n    \"esri/widgets/Home/HomeViewModel\",\r\n    \"dojo/domReady!\"\r\n], function(Map, MapView, ArcGISDynamicLayer, FeatureLayer, PopupTemplate, Legend, Compass, CompassVM, Home, HomeVM) {\r\n    var map = new Map({\r\n        basemap: \"oceans\"\r\n    });\r\n\r\n    var view = new MapView({\r\n        container: \"map-container\",\r\n        map: map,\r\n        zoom: 9,\r\n        center: [121.5, 33]\r\n    });\r\n\r\n    /*var lyr = new ArcGISDynamicLayer({\r\n        url: \"http://localhost:6080/arcgis/rest/services/04202/MapServer\"\r\n    });\r\n    map.add(lyr);*/\r\n\r\n    var content = \"<b>{FID}</b> {OBJECTID}<br>\" +\r\n        \"功能区类型:{功能区类型}<br>\" + \"{SHAPE_LEN}\" + \"<img src='https://www.google.com/logos/doodles/2016/mohammed-ghani-hikmats-87th-birthday-5708620060688384-hp2x.jpg' />\";\r\n\r\n    var pt = new PopupTemplate({\r\n        title: '{FID}',\r\n        content: content\r\n    });\r\n    var legendJson = {};\r\n    $.get('http://localhost:6080/arcgis/rest/services/04202/MapServer/legend?f=pjson', function(res) {\r\n        legendJson =    res;\r\n    })\r\n    var zoningLyr = new FeatureLayer({\r\n        id: '功能区划',\r\n        url: \"http://localhost:6080/arcgis/rest/services/04202/MapServer/5\",\r\n        //popupTemplate: pt\r\n    });\r\n    map.add(zoningLyr);\r\n    var tempLyr = new FeatureLayer({\r\n        url: \"http://localhost:6080/arcgis/rest/services/04202/MapServer/2\",\r\n        definitionExpression: \"用海一级类 = '渔业用海'\",\r\n            popupTemplate: new PopupTemplate({\r\n                title: 'title',\r\n                content: \"layer.No.\" +  \"<b>{FID}</b>\"\r\n            })\r\n    });\r\n    map.add(tempLyr);\r\n    /**/\r\n    var compass = new Compass({\r\n        viewModel: new CompassVM({\r\n            view: view\r\n        })\r\n    }, \"compass\");\r\n    compass.startup();\r\n\r\n    var homeBtn = new Home({\r\n        viewModel: new HomeVM({\r\n            view: view\r\n        })\r\n    }, \"home\");\r\n    homeBtn.startup();\r\n\r\n    var legend = new Legend({ view: view }, 'legend');\r\n    legend.startup();\r\n    var switchLyr = function() {\r\n        var lyrNames = ['确权数据', '确权数据--配号来源', '确权数据--用海一级类', '确权数据--用海二级类', '确权数据--用海方式', '功能区划'];\r\n        var authLyr = new FeatureLayer({\r\n            id: lyrNames[0],\r\n            url: \"http://localhost:6080/arcgis/rest/services/04202/MapServer/0\",\r\n            popupTemplate: new PopupTemplate({\r\n                title: 'title',\r\n                content: \"layer.No.\" + i + \"<b>{FID}</b>\"\r\n            })\r\n        });\r\n        map.add(authLyr);\r\n\r\n        var lyrs = {};\r\n        lyrs[authLyr.id] = authLyr;\r\n        for (var i = 1; i < 5; i++) {\r\n            var newLyr = new FeatureLayer({\r\n                id: lyrNames[i],\r\n                url: \"http://localhost:6080/arcgis/rest/services/04202/MapServer/\" + i,\r\n                popupTemplate: new PopupTemplate({\r\n                    title: 'title',\r\n                    content: \"layer.No.\" + i + \"<br><b>{FID}</b>{用海一级类}\"\r\n                })\r\n            });\r\n            //add but do not show\r\n            newLyr.visible = false;\r\n            map.add(newLyr);\r\n            lyrs[newLyr.id] = newLyr;\r\n        }\r\n        return {\r\n            to: function to(val) {\r\n                for (var lyrid in lyrs) {\r\n                    lyrs[lyrid].visible = false;\r\n                    if (lyrid == lyrNames[val]) {\r\n                        lyrs[lyrid].visible = true;\r\n                    }\r\n                }\r\n                legend.refresh();\r\n                //layerControl.setCheckbox();\r\n            },\r\n            show: function hide(id) {\r\n                lyrs[id].visible = true;\r\n                legend.refresh();\r\n                layerControl.setCheckbox();\r\n            },\r\n            hide: function hide(id) {\r\n                lyrs[id].visible = false;\r\n                legend.refresh();\r\n                layerControl.setCheckbox();\r\n            }\r\n        }\r\n    }();\r\n\r\n    $('#aythLyrCata').change(function() {\r\n        switchLyr.to($(this).val());\r\n    });\r\n\r\n\r\n\r\n    var layerControl = function() {\r\n        var specificLyrs = {};\r\n        var lyrNames = ['确权数据', '确权数据--配号来源', '确权数据--用海一级类', '确权数据--用海二级类', '确权数据--用海方式', '功能区划'];\r\n\r\n        function setCheckbox() {\r\n            $('.esri-legend-service').each(function() {\r\n                var legendSvcLyr = $(this);\r\n                var label = legendSvcLyr.find('.esri-legend-service-label').text();\r\n                var lyrName = label.substring(label.lastIndexOf(' ') + 1);\r\n                console.log(lyrName);\r\n                var layer = legendSvcLyr.find('.esri-legend-layer').first();\r\n                //loop through table rows\r\n                layer.find('tr').each(function() {\r\n                    var tr = $(this);\r\n                    var tds = tr.find('td');\r\n                    if (tds && tds.length && tds.length > 1) {\r\n                        var sym = $(this).find('td').first();\r\n                        //find the cell has text, which should be catagory info\r\n                        $(this).find('td').each(function() {\r\n                            var td = $(this);\r\n                            if (!(td.find('table')[0])) {\r\n                                var cata = $(this).text();\r\n                                if (cata && cata.length > 0) {\r\n                                    //add the layer\r\n                                    var lyrIndex = lyrNames.indexOf(lyrName);\r\n                                    var tempLyr = new FeatureLayer({\r\n                                        id: lyrName + '_' + cata,\r\n                                        url: \"http://localhost:6080/arcgis/rest/services/04202/MapServer/\" + lyrIndex,\r\n                                        definitionExpression: lyrName + \" = \" + \"'\" + cata + \"'\"\r\n                                    });\r\n                                    map.add(tempLyr);\r\n                                    specificLyrs[tempLyr.id] = tempLyr;\r\n                                    //add checkbox\r\n                                    var checkBox = $('<input>').attr({ 'type': 'checkbox', 'data-lyr': lyrName, 'data-cata': cata, 'data-lyrid': lyrName + '_' + cata }).prop('checked', true).text(cata).change(function() {\r\n                                        var lyrid = $(this).data('lyrid');\r\n                                        if ($(this).is(':checked')) {\r\n                                            specificLyrs[lyrid].visible = true;\r\n                                            return;\r\n                                        }\r\n                                        specificLyrs[lyrid].visible = false;\r\n                                    });\r\n                                    var newtd = $('<td>').append(checkBox);\r\n                                    //insert checkbox\r\n                                    newtd.insertBefore(sym);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n\r\n            });\r\n        }\r\n        return {\r\n            setCheckbox: setCheckbox\r\n        }\r\n    }();\r\n});\r\n"],"sourceRoot":"/source/"}